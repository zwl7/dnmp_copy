{"version":3,"file":"index.js","sources":["../../../../../src/pages-sub/map/index.vue","../../../../../uniPage:/cGFnZXMtc3ViL21hcC9pbmRleC52dWU"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <view class=\"top_container\">\n      <navBar\n        :navColor=\"navColor\"\n        :isFixed=\"false\"\n        titleColor=\"#323233\"\n        title=\"健身地图\"\n        :showBack=\"true\"\n        searchTitle=\"\"\n      ></navBar>\n      <scrollTabX :list=\"tabList\" @click=\"changeTab\"></scrollTabX>\n    </view>\n    <map\n      id=\"map\"\n      :latitude=\"latitude\"\n      :longitude=\"longitude\"\n      :scale=\"scale\"\n      :min-scale=\"1\"\n      :max-scale=\"20\"\n      :enable-overlooking=\"overlooking\"\n      :skew=\"skew\"\n      @regionchange=\"regionchange\"\n      @labeltap=\"clickMarker\"\n      @markertap=\"clickMarker\"\n    >\n      <view v-show=\"showBack\" class=\"back\" @click=\"handleBack\">回到静安</view>\n      <!-- <view class=\"back1\">{{ latitude }}--{{ longitude }}</view> -->\n      <view class=\"right_box\">\n        <view class=\"right_layer\" @click=\"handleRight(1)\">\n          <image src=\"../../static/images/map-layer.png\" mode=\"\" class=\"img\"></image>\n        </view>\n        <view class=\"right_location\" @click=\"handleRight(2)\">\n          <image src=\"../../static/images/map-location.png\" mode=\"\" class=\"img\"></image>\n        </view>\n        <view class=\"right_location\" @click=\"handleRight(3)\">\n          <image src=\"../../static/images/map-list.png\" mode=\"\" class=\"img\"></image>\n        </view>\n      </view>\n    </map>\n    <show-map-info-popup ref=\"showMapInfoPopupRef\" :mapInfo=\"mapInfo\"></show-map-info-popup>\n  </view>\n</template>\n\n<script>\nimport { getWxMapList, getWxMapTypeList } from '@/apis/stadium.js'\nimport { getMapAreaList } from '@/apis/common.js'\nimport { getShortDistanceBase, reverseGeocoder } from '@/utils/mapUtils'\nimport navBar from '@/components/navBar/index.vue'\nimport mapAll from '@/static/images/map-all.png'\nimport mapStadium from '@/static/images/map-stadium.png'\nimport mapClub from '@/static/images/map-club.png'\nimport mapOrgan from '@/static/images/map-organ.png'\nimport mapTour from '@/static/images/map-tour.png'\nimport mapBus from '@/static/images/map-business.png'\nimport showMapInfoPopup from './components/showMapInfoPopup.vue'\nimport scrollTabX from './components/scrollTabX.vue'\nimport shareMixins from '@/mixins/shareMixins.js'\nexport default {\n  mixins: [shareMixins],\n  components: {\n    navBar,\n    showMapInfoPopup,\n    scrollTabX,\n  },\n  data() {\n    return {\n      navColor: 'transparent',\n      menuHeight: 50,\n      tabList: [\n        {\n          name: '全部类型',\n          img: mapAll,\n          gather_type_id: '',\n        },\n        {\n          name: '体育俱乐部',\n          img: mapClub,\n        },\n        // {\n        // \tname: '体育总会',\n        // \timg: mapOrgan\n        // },\n        // {\n        // \tname: '体育场馆',\n        // \timg: mapStadium\n        // }\n      ],\n      longitude: 115.362586, // 经度\n      latitude: 28.861319, // 纬度\n      minScale: 8,\n      maxScale: 20,\n      scale: 16,\n      oldClientY: 0,\n      height: 200,\n      overlooking: false, //是否开启俯视\n      skew: 0,\n      sizer: {\n        street_id: '',\n        gather_type_id: '',\n        search_tag: '',\n        community_ids: '',\n        keyword: '',\n      },\n      form: {\n        page: 1,\n        size: 999,\n      },\n      center: {\n        longitude: 115.362586, // 经度\n        latitude: 28.861319, // 纬度\n      },\n      drag_location: {\n        longitude: 115.362586, // 经度\n        latitude: 28.861319, // 纬度\n      },\n      keyword: '',\n      mapList: [],\n      _mapContext: null,\n      intervalId: '',\n      showBack: false,\n      isNotYunChen: false,\n      oldScale: '16',\n      radium: 0,\n      markersList: [],\n      siteInfoList: [],\n      companyAreaList: [],\n      mapInfo: {},\n    }\n  },\n  async onReady() {\n    this._mapContext = uni.createMapContext('map', this)\n    let app = getApp()\n    this.getWxMapTypeListData()\n    let _this = this\n    if (app.globalData.user_latitude && app.globalData.user_longitude) {\n      let user_longitude = app.globalData.user_longitude\n      let user_latitude = app.globalData.user_latitude\n      this.drag_location.latitude = user_latitude\n      this.drag_location.longitude = user_longitude\n      reverseGeocoder(user_latitude, user_longitude).then((res) => {\n        if (res.city_name.indexOf('静安') == -1) {\n          // this.showBack = true\n          this.isNotYunChen = true\n          this._mapContext.getCenterLocation({\n            success: function (res) {\n              console.log('获取当前经纬度地址', res)\n              if (res.latitude == 0 || res.longitude == 0) {\n                _this.latitude = 28.861319\n                _this.longitude = 115.362586\n              }\n              setTimeout(() => {\n                _this.setMapCener(_this.latitude, _this.longitude)\n              }, 300)\n            },\n          })\n        } else {\n          this.latitude = user_latitude\n          this.longitude = user_longitude\n        }\n      })\n    }\n\n    this._mapContext.initMarkerCluster({\n      enableDefaultStyle: false,\n      zoomOnClick: true,\n      gridSize: 60,\n      complete(res) {\n        console.log('initMarkerCluster', res)\n      },\n    })\n    this._mapContext.on('markerClusterCreate', (res) => {\n      console.log('markerClusterCreate', res)\n      const clusters = res.clusters\n      const markers = clusters.map((cluster) => {\n        const { center, clusterId, markerIds } = cluster\n        return {\n          ...center,\n          width: 0,\n          height: 0,\n          clusterId, // 必须\n          label: {\n            content: markerIds.length + '',\n            fontSize: 20,\n            width: 60,\n            height: 60,\n            bgColor: '#e05830',\n            color: '#fff',\n            borderRadius: 30,\n            textAlign: 'center',\n            anchorX: 0,\n            anchorY: -30,\n          },\n        }\n      })\n      this._mapContext.addMarkers({\n        markers,\n        clear: false,\n        complete(res) {\n          console.log('addMarkers', res)\n        },\n      })\n    })\n    this.getMapScale()\n    this.getRegion()\n    await this.getMaqList(this.center.latitude, this.center.longitude)\n  },\n  onLoad() {\n    const app = getApp()\n    let { menuHeight } = app.globalData\n    this.menuHeight = menuHeight\n    let _this = this\n    this._mapContext = uni.createMapContext('map', this)\n    this._mapContext.getCenterLocation({\n      success: function (res) {\n        console.log('获取当前经纬度地址', res)\n        if (res.latitude == 0 || res.longitude == 0) {\n          _this.latitude = 28.861319\n          _this.longitude = 115.362586\n          setTimeout(() => {\n            _this.setMapCener(_this.latitude, _this.longitude)\n          }, 300)\n        }\n      },\n    })\n  },\n  methods: {\n    getMaqList(latitude, longitude) {\n      if (!latitude || !longitude) {\n        latitude = this.drag_location.latitude\n        longitude = this.drag_location.longitude\n      }\n      return new Promise(async (resolve) => {\n        const { street_id, gather_type_id, search_tag, community_ids, keyword, distance } =\n          this.sizer\n        let params = {\n          ...this.form,\n          longitude: longitude,\n          latitude: latitude,\n          street_id,\n          gather_type_id,\n        }\n        if (distance && distance != '0') {\n          params.distance = distance\n        }\n        if (street_id && street_id != '0') {\n          params.street_id = street_id\n        }\n        if (search_tag) {\n          params.search_tag = search_tag\n        }\n        if (keyword) {\n          params.keyword = keyword\n        }\n        if (gather_type_id) {\n          params.gather_type_id = gather_type_id\n        }\n        const { data } = await getWxMapList(params)\n        this.mapList = data.list\n        this.renderMarker(this.mapList)\n        resolve(1)\n      })\n    },\n    renderMarker(markers) {\n      if (!this._mapContext) {\n        console.error('_mapContext 获取失败')\n        return\n      }\n      const showMarkerList = []\n      let length = markers.length\n      markers.forEach((item, index) => {\n        let obj = {\n          id: index + 1,\n          // iconPath: 'https://cdn-static.papa.com.cn/shandong' + item.icon,\n          iconPath: item.icon,\n          width: 33,\n          height: 40,\n          joinCluster: false,\n          // label: {\n          // \tbgColor: '#0396DE',\n          // \tcontent: item.name,\n          // \ttextAlign: 'center',\n          // \tcolor: '#fff',\n          // \tpadding: 2\n          // },\n          latitude: item.latitude,\n          longitude: item.longitude,\n          level: 1,\n        }\n\n        showMarkerList.push(obj)\n      })\n      let _this = this\n      this._mapContext.addMarkers({\n        markers: showMarkerList,\n        clear: true,\n        complete(res) {\n          _this.markersList = showMarkerList\n          _this.siteInfoList = markers\n        },\n        fail(error) {\n          console.log('error', error)\n        },\n        success(res) {\n          console.log('res', res)\n        },\n      })\n    },\n    clickMarker(e) {\n      let markerId = e.markerId\n      let item = this.markersList[markerId - 1]\n      console.log('level', item.level, item)\n      let _this = this\n      if (item.level === 3) {\n        this._mapContext.moveToLocation({\n          longitude: item.longitude,\n          latitude: item.latitude,\n          success(res) {\n            console.log('res', res)\n            _this.scale = 12\n            _this.drag_location.latitude = _this.center.latitude\n            _this.drag_location.longitude = _this.center.longitude\n          },\n        })\n      }\n\n      if (item.level === 4) {\n        this._mapContext.moveToLocation({\n          longitude: item.longitude,\n          latitude: item.latitude,\n          success(res) {\n            _this.scale = 14\n            _this.drag_location.latitude = _this.center.latitude\n            _this.drag_location.longitude = _this.center.longitude\n          },\n        })\n      }\n      if (item.level === 1) {\n        let siteInfo = this.siteInfoList[markerId - 1]\n        console.log(siteInfo)\n        siteInfo.showImage = siteInfo.images\n        _this.mapInfo = siteInfo\n        _this.$nextTick(() => {\n          _this.$refs['showMapInfoPopupRef'].open()\n        })\n      }\n    },\n    getMapScale() {\n      if (!this._mapContext) {\n        console.error('_mapContext 获取失败')\n        return\n      }\n      let _this = this\n      this.intervalId = setInterval(() => {\n        this._mapContext.getScale({\n          success: (res) => {\n            // 8-11  显示区\n            // 11-14  显示街道\n            // console.log(res);\n            if (this.oldScale != res.scale) {\n              // 执行操作\n              // if (8 <= res.scale && res.scale < 11) {\n              // \tthis.renderCircle(3);\n              // } else if (11 <= res.scale && res.scale < 14) {\n              // \tthis.renderCircle(4);\n              // } else {\n              // \t_this.getMaqList(_this.drag_location.latitude, _this.drag_location.longitude);\n              // }\n              this.oldScale = res.scale\n            }\n          },\n        })\n      }, 1000)\n    },\n    regionchange(res) {\n      if (res.type === 'end') {\n        let new_latitude = res.target.centerLocation.latitude\n        let new_longitude = res.target.centerLocation.longitude\n        let distance = getShortDistanceBase(\n          new_latitude,\n          new_longitude,\n          this.drag_location.latitude,\n          this.drag_location.longitude,\n        )\n        this.drag_location = {\n          latitude: new_latitude,\n          longitude: new_longitude,\n        }\n        if (distance > 100) {\n          let scale = this.oldScale\n          console.log('请求列表', scale)\n          // if (8 <= scale && scale < 11) {\n          // \tthis.renderCircle(3);\n          // } else if (11 <= scale && scale < 13) {\n          // \tthis.renderCircle(4);\n          // } else {\n          // \tthis.getMaqList(new_latitude, new_longitude);\n          // }\n          this.getMaqList(new_latitude, new_longitude)\n        }\n      }\n    },\n    // 点击右边  1  图层切换   2  当前定位\n    handleRight(type) {\n      console.log(type)\n      if (type == 1) {\n        this.overlooking = !this.overlooking\n        this.skew = this.overlooking ? 90 : 0\n      }\n      if (type == 2) {\n        let app = getApp()\n        console.log(\n          app.globalData.is_get_location,\n          app.globalData.user_latitude,\n          app.globalData.user_longitude,\n        )\n        if (\n          app.globalData.is_get_location &&\n          app.globalData.user_latitude &&\n          app.globalData.user_longitude\n        ) {\n          let user_longitude = app.globalData.user_longitude\n          let user_latitude = app.globalData.user_latitude\n          this.latitude = user_latitude\n          this.longitude = user_longitude\n          this.setMapCener(user_latitude, user_longitude)\n          if (this.isNotYunChen) {\n            this.showBack = true\n          }\n        } else {\n          app.getLocation()\n        }\n      }\n      if (type == 3) {\n        uni.showToast({\n          title: '敬请期待',\n          icon: 'none',\n        })\n        console.log('列表', this.tabList)\n      }\n    },\n    setMapCener(latitude, longitude) {\n      if (!this._mapContext) {\n        console.error('_mapContext 获取失败')\n        return\n      }\n      let _this = this\n      this._mapContext.moveToLocation({\n        longitude: longitude,\n        latitude: latitude,\n        success(res) {\n          console.log('设置中心点', res)\n          _this.drag_location.latitude = latitude\n          _this.drag_location.longitude = longitude\n        },\n        fail(err) {\n          console.log('设置中心点err', err)\n        },\n      })\n    },\n    // 回到静安\n    handleBack() {\n      this.setMapCener(this.center.latitude, this.center.longitude)\n      if (this.showBack) {\n        this.showBack = false\n      }\n    },\n    getSearchData(data) {\n      this.getMaqList()\n    },\n    async renderCircle(level) {\n      let params = {\n        distance: parseInt(this.radium),\n        gather_type_id: this.sizer.gather_type_id,\n        latitude: this.drag_location.latitude,\n        level: level,\n        longitude: this.drag_location.longitude,\n        size: 100,\n      }\n      let list = []\n      let areaListRes = await getMapAreaList(params)\n      if (areaListRes.code === 200) {\n        var promiseList = []\n        areaListRes.data.list.map((e) => {\n          list.push(e)\n        })\n      }\n      let showMarkerList = []\n      list.forEach((item, index) => {\n        if (item.count_num) {\n          let obj = {\n            id: index + 1,\n            latitude: Number(item.lat),\n            longitude: Number(item.lng),\n            width: 0,\n            height: 0,\n            label: {\n              content: `${item.name}\\n${item.count_num}个\\n体育资源点`,\n              fontSize: 12,\n              width: 80,\n              height: 80,\n              bgColor: '#e05830',\n              color: '#fff',\n              borderRadius: 40,\n              textAlign: 'center',\n              anchorX: 0,\n              anchorY: -30,\n            },\n            level: level,\n          }\n          showMarkerList.push(obj)\n        }\n      })\n      let _this = this\n      this._mapContext.addMarkers({\n        markers: showMarkerList,\n        clear: true,\n        complete(res) {\n          console.log('addMarkers11111', res)\n          _this.markersList = showMarkerList\n        },\n        fail(error) {\n          console.log('error1111', error)\n        },\n        success(res) {\n          console.log('res1111', res)\n        },\n      })\n    },\n    // 获取可视范围内的距离\n    getRegion() {\n      if (!this._mapContext) {\n        console.error('_mapContext 获取失败')\n        return\n      }\n      let _this = this\n      this._mapContext.getRegion({\n        success(res) {\n          let lat_1 = res.northeast.latitude\n          let lon_1 = res.northeast.longitude\n          const radium = getShortDistanceBase(\n            lat_1,\n            lon_1,\n            _this.drag_location.latitude,\n            _this.drag_location.longitude,\n          ).toFixed(1)\n          this.radium = radium\n        },\n      })\n    },\n\n    // 获取类型分类\n    async getWxMapTypeListData() {\n      let res = await getWxMapTypeList({ page: 1, size: 999 })\n      console.log('获取类型分类', res)\n      if (res.code == 200) {\n        let list = []\n        mapStadium\n        let objMap = {\n          体育场馆: mapStadium,\n          体育组织: mapOrgan,\n          体质监测点: mapClub,\n          静安旅游: mapTour,\n          经营场所: mapBus,\n        }\n        res.data.map((e) => {\n          let img = objMap[e.name] ? objMap[e.name] : mapClub\n          list.push({\n            name: e.name,\n            img: img,\n            gather_type_id: e.gather_type_id,\n          })\n        })\n        this.tabList = this.tabList.concat(...list)\n      }\n    },\n    changeTab(e) {\n      console.log(e)\n      this.sizer.gather_type_id = e.gather_type_id\n      this.getSearchData()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  .top_container {\n    background: $hubei-map-bg-color;\n  }\n\n  #map {\n    width: 100%;\n    flex: 1;\n  }\n}\n\n.tab_box {\n  width: 100%;\n  height: 88rpx;\n  box-shadow: 0px 2px 12px rgba(44, 101, 158, 0.08);\n}\n\n.right_box {\n  position: absolute;\n  right: 32rpx;\n  top: 32rpx;\n}\n\n.right_location,\n.right_layer {\n  width: 88rpx;\n  height: 88rpx;\n  border-radius: 88rpx;\n  opacity: 1;\n  background: #ffffff;\n  box-shadow: 0px 2px 6px #666667;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .img {\n    display: block;\n    width: 44rpx;\n    height: 44rpx;\n  }\n}\n\n.right_location {\n  margin-top: 28rpx;\n}\n\n.back {\n  position: absolute;\n  background: white;\n  z-index: 100;\n  border-radius: 30rpx;\n  top: 30rpx;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 0;\n  padding: 0 20rpx;\n  text-align: center;\n  height: 70rpx;\n  line-height: 70rpx;\n  font-size: 30rpx;\n  box-shadow: 0rpx 6rpx 18rpx 0rpx rgba(173, 183, 181, 1);\n}\n.back1 {\n  position: absolute;\n  background: white;\n  z-index: 100;\n  border-radius: 30rpx;\n  top: 100rpx;\n}\n</style>\n","import MiniProgramPage from '/Users/guoxiaoming/code/papa-code/pm-yn/uniapp-social-sports-new/src/pages-sub/map/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["shareMixins","mapAll","mapClub","uni","reverseGeocoder","res","getWxMapList","getShortDistanceBase","getMapAreaList","getWxMapTypeList","mapStadium","mapOrgan","mapTour","mapBus"],"mappings":"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"}