{"version":3,"file":"qqmap-wx-jssdk.js","sources":["../../../../../src/utils/thirdPartUtils/qqmap-wx-jssdk.js"],"sourcesContent":["/**\n * 微信小程序JavaScriptSDK\n *\n * @version 1.2\n * @date 2019-03-06\n */\n\nvar ERROR_CONF = {\n  KEY_ERR: 311,\n  KEY_ERR_MSG: 'key格式错误',\n  PARAM_ERR: 310,\n  PARAM_ERR_MSG: '请求参数信息有误',\n  SYSTEM_ERR: 600,\n  SYSTEM_ERR_MSG: '系统错误',\n  WX_ERR_CODE: 1000,\n  WX_OK_CODE: 200,\n}\nvar BASE_URL = 'https://apis.map.qq.com/ws/'\nvar URL_SEARCH = BASE_URL + 'place/v1/search'\nvar URL_SUGGESTION = BASE_URL + 'place/v1/suggestion'\nvar URL_GET_GEOCODER = BASE_URL + 'geocoder/v1/'\nvar URL_CITY_LIST = BASE_URL + 'district/v1/list'\nvar URL_AREA_LIST = BASE_URL + 'district/v1/getchildren'\nvar URL_DISTANCE = BASE_URL + 'distance/v1/'\nvar URL_DIRECTION = BASE_URL + 'direction/v1/'\nvar MODE = {\n  driving: 'driving',\n  transit: 'transit',\n}\nvar EARTH_RADIUS = 6378136.49\nvar Utils = {\n  /**\n   * md5加密方法\n   * 版权所有©2011 Sebastian Tschan，https：//blueimp.net\n   */\n  safeAdd(x, y) {\n    var lsw = (x & 0xffff) + (y & 0xffff)\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n    return (msw << 16) | (lsw & 0xffff)\n  },\n  bitRotateLeft(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt))\n  },\n  md5cmn(q, a, b, x, s, t) {\n    return this.safeAdd(\n      this.bitRotateLeft(this.safeAdd(this.safeAdd(a, q), this.safeAdd(x, t)), s),\n      b,\n    )\n  },\n  md5ff(a, b, c, d, x, s, t) {\n    return this.md5cmn((b & c) | (~b & d), a, b, x, s, t)\n  },\n  md5gg(a, b, c, d, x, s, t) {\n    return this.md5cmn((b & d) | (c & ~d), a, b, x, s, t)\n  },\n  md5hh(a, b, c, d, x, s, t) {\n    return this.md5cmn(b ^ c ^ d, a, b, x, s, t)\n  },\n  md5ii(a, b, c, d, x, s, t) {\n    return this.md5cmn(c ^ (b | ~d), a, b, x, s, t)\n  },\n  binlMD5(x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << len % 32\n    x[(((len + 64) >>> 9) << 4) + 14] = len\n\n    var i\n    var olda\n    var oldb\n    var oldc\n    var oldd\n    var a = 1732584193\n    var b = -271733879\n    var c = -1732584194\n    var d = 271733878\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a\n      oldb = b\n      oldc = c\n      oldd = d\n\n      a = this.md5ff(a, b, c, d, x[i], 7, -680876936)\n      d = this.md5ff(d, a, b, c, x[i + 1], 12, -389564586)\n      c = this.md5ff(c, d, a, b, x[i + 2], 17, 606105819)\n      b = this.md5ff(b, c, d, a, x[i + 3], 22, -1044525330)\n      a = this.md5ff(a, b, c, d, x[i + 4], 7, -176418897)\n      d = this.md5ff(d, a, b, c, x[i + 5], 12, 1200080426)\n      c = this.md5ff(c, d, a, b, x[i + 6], 17, -1473231341)\n      b = this.md5ff(b, c, d, a, x[i + 7], 22, -45705983)\n      a = this.md5ff(a, b, c, d, x[i + 8], 7, 1770035416)\n      d = this.md5ff(d, a, b, c, x[i + 9], 12, -1958414417)\n      c = this.md5ff(c, d, a, b, x[i + 10], 17, -42063)\n      b = this.md5ff(b, c, d, a, x[i + 11], 22, -1990404162)\n      a = this.md5ff(a, b, c, d, x[i + 12], 7, 1804603682)\n      d = this.md5ff(d, a, b, c, x[i + 13], 12, -40341101)\n      c = this.md5ff(c, d, a, b, x[i + 14], 17, -1502002290)\n      b = this.md5ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n      a = this.md5gg(a, b, c, d, x[i + 1], 5, -165796510)\n      d = this.md5gg(d, a, b, c, x[i + 6], 9, -1069501632)\n      c = this.md5gg(c, d, a, b, x[i + 11], 14, 643717713)\n      b = this.md5gg(b, c, d, a, x[i], 20, -373897302)\n      a = this.md5gg(a, b, c, d, x[i + 5], 5, -701558691)\n      d = this.md5gg(d, a, b, c, x[i + 10], 9, 38016083)\n      c = this.md5gg(c, d, a, b, x[i + 15], 14, -660478335)\n      b = this.md5gg(b, c, d, a, x[i + 4], 20, -405537848)\n      a = this.md5gg(a, b, c, d, x[i + 9], 5, 568446438)\n      d = this.md5gg(d, a, b, c, x[i + 14], 9, -1019803690)\n      c = this.md5gg(c, d, a, b, x[i + 3], 14, -187363961)\n      b = this.md5gg(b, c, d, a, x[i + 8], 20, 1163531501)\n      a = this.md5gg(a, b, c, d, x[i + 13], 5, -1444681467)\n      d = this.md5gg(d, a, b, c, x[i + 2], 9, -51403784)\n      c = this.md5gg(c, d, a, b, x[i + 7], 14, 1735328473)\n      b = this.md5gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n      a = this.md5hh(a, b, c, d, x[i + 5], 4, -378558)\n      d = this.md5hh(d, a, b, c, x[i + 8], 11, -2022574463)\n      c = this.md5hh(c, d, a, b, x[i + 11], 16, 1839030562)\n      b = this.md5hh(b, c, d, a, x[i + 14], 23, -35309556)\n      a = this.md5hh(a, b, c, d, x[i + 1], 4, -1530992060)\n      d = this.md5hh(d, a, b, c, x[i + 4], 11, 1272893353)\n      c = this.md5hh(c, d, a, b, x[i + 7], 16, -155497632)\n      b = this.md5hh(b, c, d, a, x[i + 10], 23, -1094730640)\n      a = this.md5hh(a, b, c, d, x[i + 13], 4, 681279174)\n      d = this.md5hh(d, a, b, c, x[i], 11, -358537222)\n      c = this.md5hh(c, d, a, b, x[i + 3], 16, -722521979)\n      b = this.md5hh(b, c, d, a, x[i + 6], 23, 76029189)\n      a = this.md5hh(a, b, c, d, x[i + 9], 4, -640364487)\n      d = this.md5hh(d, a, b, c, x[i + 12], 11, -421815835)\n      c = this.md5hh(c, d, a, b, x[i + 15], 16, 530742520)\n      b = this.md5hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n      a = this.md5ii(a, b, c, d, x[i], 6, -198630844)\n      d = this.md5ii(d, a, b, c, x[i + 7], 10, 1126891415)\n      c = this.md5ii(c, d, a, b, x[i + 14], 15, -1416354905)\n      b = this.md5ii(b, c, d, a, x[i + 5], 21, -57434055)\n      a = this.md5ii(a, b, c, d, x[i + 12], 6, 1700485571)\n      d = this.md5ii(d, a, b, c, x[i + 3], 10, -1894986606)\n      c = this.md5ii(c, d, a, b, x[i + 10], 15, -1051523)\n      b = this.md5ii(b, c, d, a, x[i + 1], 21, -2054922799)\n      a = this.md5ii(a, b, c, d, x[i + 8], 6, 1873313359)\n      d = this.md5ii(d, a, b, c, x[i + 15], 10, -30611744)\n      c = this.md5ii(c, d, a, b, x[i + 6], 15, -1560198380)\n      b = this.md5ii(b, c, d, a, x[i + 13], 21, 1309151649)\n      a = this.md5ii(a, b, c, d, x[i + 4], 6, -145523070)\n      d = this.md5ii(d, a, b, c, x[i + 11], 10, -1120210379)\n      c = this.md5ii(c, d, a, b, x[i + 2], 15, 718787259)\n      b = this.md5ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n      a = this.safeAdd(a, olda)\n      b = this.safeAdd(b, oldb)\n      c = this.safeAdd(c, oldc)\n      d = this.safeAdd(d, oldd)\n    }\n    return [a, b, c, d]\n  },\n  binl2rstr(input) {\n    var i\n    var output = ''\n    var length32 = input.length * 32\n    for (i = 0; i < length32; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff)\n    }\n    return output\n  },\n  rstr2binl(input) {\n    var i\n    var output = []\n    output[(input.length >> 2) - 1] = undefined\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0\n    }\n    var length8 = input.length * 8\n    for (i = 0; i < length8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32\n    }\n    return output\n  },\n  rstrMD5(s) {\n    return this.binl2rstr(this.binlMD5(this.rstr2binl(s), s.length * 8))\n  },\n  rstrHMACMD5(key, data) {\n    var i\n    var bkey = this.rstr2binl(key)\n    var ipad = []\n    var opad = []\n    var hash\n    ipad[15] = opad[15] = undefined\n    if (bkey.length > 16) {\n      bkey = this.binlMD5(bkey, key.length * 8)\n    }\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636\n      opad[i] = bkey[i] ^ 0x5c5c5c5c\n    }\n    hash = this.binlMD5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8)\n    return this.binl2rstr(this.binlMD5(opad.concat(hash), 512 + 128))\n  },\n  rstr2hex(input) {\n    var hexTab = '0123456789abcdef'\n    var output = ''\n    var x\n    var i\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i)\n      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)\n    }\n    return output\n  },\n  str2rstrUTF8(input) {\n    return unescape(encodeURIComponent(input))\n  },\n  rawMD5(s) {\n    return this.rstrMD5(this.str2rstrUTF8(s))\n  },\n  hexMD5(s) {\n    return this.rstr2hex(this.rawMD5(s))\n  },\n  rawHMACMD5(k, d) {\n    return this.rstrHMACMD5(this.str2rstrUTF8(k), str2rstrUTF8(d))\n  },\n  hexHMACMD5(k, d) {\n    return this.rstr2hex(this.rawHMACMD5(k, d))\n  },\n\n  md5(string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return this.hexMD5(string)\n      }\n      return this.rawMD5(string)\n    }\n    if (!raw) {\n      return this.hexHMACMD5(key, string)\n    }\n    return this.rawHMACMD5(key, string)\n  },\n  /**\n   * 得到md5加密后的sig参数\n   * @param {Object} requestParam 接口参数\n   * @param {String} sk签名字符串\n   * @param {String} featrue 方法名\n   * @return 返回加密后的sig参数\n   */\n  getSig(requestParam, sk, feature, mode) {\n    var sig = null\n    var requestArr = []\n    Object.keys(requestParam)\n      .sort()\n      .forEach(function (key) {\n        requestArr.push(key + '=' + requestParam[key])\n      })\n    if (feature == 'search') {\n      sig = '/ws/place/v1/search?' + requestArr.join('&') + sk\n    }\n    if (feature == 'suggest') {\n      sig = '/ws/place/v1/suggestion?' + requestArr.join('&') + sk\n    }\n    if (feature == 'reverseGeocoder') {\n      sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk\n    }\n    if (feature == 'geocoder') {\n      sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk\n    }\n    if (feature == 'getCityList') {\n      sig = '/ws/district/v1/list?' + requestArr.join('&') + sk\n    }\n    if (feature == 'getDistrictByCityId') {\n      sig = '/ws/district/v1/getchildren?' + requestArr.join('&') + sk\n    }\n    if (feature == 'calculateDistance') {\n      sig = '/ws/distance/v1/?' + requestArr.join('&') + sk\n    }\n    if (feature == 'direction') {\n      sig = '/ws/direction/v1/' + mode + '?' + requestArr.join('&') + sk\n    }\n    sig = this.md5(sig)\n    return sig\n  },\n  /**\n   * 得到终点query字符串\n   * @param {Array|String} 检索数据\n   */\n  location2query(data) {\n    if (typeof data == 'string') {\n      return data\n    }\n    var query = ''\n    for (var i = 0; i < data.length; i++) {\n      var d = data[i]\n      if (!!query) {\n        query += ';'\n      }\n      if (d.location) {\n        query = query + d.location.lat + ',' + d.location.lng\n      }\n      if (d.latitude && d.longitude) {\n        query = query + d.latitude + ',' + d.longitude\n      }\n    }\n    return query\n  },\n\n  /**\n   * 计算角度\n   */\n  rad(d) {\n    return (d * Math.PI) / 180.0\n  },\n  /**\n   * 处理终点location数组\n   * @return 返回终点数组\n   */\n  getEndLocation(location) {\n    var to = location.split(';')\n    var endLocation = []\n    for (var i = 0; i < to.length; i++) {\n      endLocation.push({\n        lat: parseFloat(to[i].split(',')[0]),\n        lng: parseFloat(to[i].split(',')[1]),\n      })\n    }\n    return endLocation\n  },\n\n  /**\n   * 计算两点间直线距离\n   * @param a 表示纬度差\n   * @param b 表示经度差\n   * @return 返回的是距离，单位m\n   */\n  getDistance(latFrom, lngFrom, latTo, lngTo) {\n    var radLatFrom = this.rad(latFrom)\n    var radLatTo = this.rad(latTo)\n    var a = radLatFrom - radLatTo\n    var b = this.rad(lngFrom) - this.rad(lngTo)\n    var distance =\n      2 *\n      Math.asin(\n        Math.sqrt(\n          Math.pow(Math.sin(a / 2), 2) +\n            Math.cos(radLatFrom) * Math.cos(radLatTo) * Math.pow(Math.sin(b / 2), 2),\n        ),\n      )\n    distance = distance * EARTH_RADIUS\n    distance = Math.round(distance * 10000) / 10000\n    return parseFloat(distance.toFixed(0))\n  },\n  /**\n   * 使用微信接口进行定位\n   */\n  getWXLocation(success, fail, complete) {\n    wx.getLocation({\n      type: 'gcj02',\n      success: success,\n      fail: fail,\n      complete: complete,\n    })\n  },\n\n  /**\n   * 获取location参数\n   */\n  getLocationParam(location) {\n    if (typeof location == 'string') {\n      var locationArr = location.split(',')\n      if (locationArr.length === 2) {\n        location = {\n          latitude: location.split(',')[0],\n          longitude: location.split(',')[1],\n        }\n      } else {\n        location = {}\n      }\n    }\n    return location\n  },\n\n  /**\n   * 回调函数默认处理\n   */\n  polyfillParam(param) {\n    param.success = param.success || function () {}\n    param.fail = param.fail || function () {}\n    param.complete = param.complete || function () {}\n  },\n\n  /**\n   * 验证param对应的key值是否为空\n   *\n   * @param {Object} param 接口参数\n   * @param {String} key 对应参数的key\n   */\n  checkParamKeyEmpty(param, key) {\n    if (!param[key]) {\n      var errconf = this.buildErrorConfig(\n        ERROR_CONF.PARAM_ERR,\n        ERROR_CONF.PARAM_ERR_MSG + key + '参数格式有误',\n      )\n      param.fail(errconf)\n      param.complete(errconf)\n      return true\n    }\n    return false\n  },\n\n  /**\n   * 验证参数中是否存在检索词keyword\n   *\n   * @param {Object} param 接口参数\n   */\n  checkKeyword(param) {\n    return !this.checkParamKeyEmpty(param, 'keyword')\n  },\n\n  /**\n   * 验证location值\n   *\n   * @param {Object} param 接口参数\n   */\n  checkLocation(param) {\n    var location = this.getLocationParam(param.location)\n    if (!location || !location.latitude || !location.longitude) {\n      var errconf = this.buildErrorConfig(\n        ERROR_CONF.PARAM_ERR,\n        ERROR_CONF.PARAM_ERR_MSG + ' location参数格式有误',\n      )\n      param.fail(errconf)\n      param.complete(errconf)\n      return false\n    }\n    return true\n  },\n\n  /**\n   * 构造错误数据结构\n   * @param {Number} errCode 错误码\n   * @param {Number} errMsg 错误描述\n   */\n  buildErrorConfig(errCode, errMsg) {\n    return {\n      status: errCode,\n      message: errMsg,\n    }\n  },\n\n  /**\n   *\n   * 数据处理函数\n   * 根据传入参数不同处理不同数据\n   * @param {String} feature 功能名称\n   * search 地点搜索\n   * suggest关键词提示\n   * reverseGeocoder逆地址解析\n   * geocoder地址解析\n   * getCityList获取城市列表：父集\n   * getDistrictByCityId获取区县列表：子集\n   * calculateDistance距离计算\n   * @param {Object} param 接口参数\n   * @param {Object} data 数据\n   */\n  handleData(param, data, feature) {\n    if (feature == 'search') {\n      var searchResult = data.data\n      var searchSimplify = []\n      for (var i = 0; i < searchResult.length; i++) {\n        searchSimplify.push({\n          id: searchResult[i].id || null,\n          title: searchResult[i].title || null,\n          latitude: (searchResult[i].location && searchResult[i].location.lat) || null,\n          longitude: (searchResult[i].location && searchResult[i].location.lng) || null,\n          address: searchResult[i].address || null,\n          category: searchResult[i].category || null,\n          tel: searchResult[i].tel || null,\n          adcode: (searchResult[i].ad_info && searchResult[i].ad_info.adcode) || null,\n          city: (searchResult[i].ad_info && searchResult[i].ad_info.city) || null,\n          district: (searchResult[i].ad_info && searchResult[i].ad_info.district) || null,\n          province: (searchResult[i].ad_info && searchResult[i].ad_info.province) || null,\n        })\n      }\n      param.success(data, {\n        searchResult: searchResult,\n        searchSimplify: searchSimplify,\n      })\n    } else if (feature == 'suggest') {\n      var suggestResult = data.data\n      var suggestSimplify = []\n      for (var i = 0; i < suggestResult.length; i++) {\n        suggestSimplify.push({\n          adcode: suggestResult[i].adcode || null,\n          address: suggestResult[i].address || null,\n          category: suggestResult[i].category || null,\n          city: suggestResult[i].city || null,\n          district: suggestResult[i].district || null,\n          id: suggestResult[i].id || null,\n          latitude: (suggestResult[i].location && suggestResult[i].location.lat) || null,\n          longitude: (suggestResult[i].location && suggestResult[i].location.lng) || null,\n          province: suggestResult[i].province || null,\n          title: suggestResult[i].title || null,\n          type: suggestResult[i].type || null,\n        })\n      }\n      param.success(data, {\n        suggestResult: suggestResult,\n        suggestSimplify: suggestSimplify,\n      })\n    } else if (feature == 'reverseGeocoder') {\n      var reverseGeocoderResult = data.result\n      var reverseGeocoderSimplify = {\n        address: reverseGeocoderResult.address || null,\n        latitude: (reverseGeocoderResult.location && reverseGeocoderResult.location.lat) || null,\n        longitude: (reverseGeocoderResult.location && reverseGeocoderResult.location.lng) || null,\n        adcode: (reverseGeocoderResult.ad_info && reverseGeocoderResult.ad_info.adcode) || null,\n        city:\n          (reverseGeocoderResult.address_component &&\n            reverseGeocoderResult.address_component.city) ||\n          null,\n        district:\n          (reverseGeocoderResult.address_component &&\n            reverseGeocoderResult.address_component.district) ||\n          null,\n        nation:\n          (reverseGeocoderResult.address_component &&\n            reverseGeocoderResult.address_component.nation) ||\n          null,\n        province:\n          (reverseGeocoderResult.address_component &&\n            reverseGeocoderResult.address_component.province) ||\n          null,\n        street:\n          (reverseGeocoderResult.address_component &&\n            reverseGeocoderResult.address_component.street) ||\n          null,\n        street_number:\n          (reverseGeocoderResult.address_component &&\n            reverseGeocoderResult.address_component.street_number) ||\n          null,\n        recommend:\n          (reverseGeocoderResult.formatted_addresses &&\n            reverseGeocoderResult.formatted_addresses.recommend) ||\n          null,\n        rough:\n          (reverseGeocoderResult.formatted_addresses &&\n            reverseGeocoderResult.formatted_addresses.rough) ||\n          null,\n      }\n      if (reverseGeocoderResult.pois) {\n        //判断是否返回周边poi\n        var pois = reverseGeocoderResult.pois\n        var poisSimplify = []\n        for (var i = 0; i < pois.length; i++) {\n          poisSimplify.push({\n            id: pois[i].id || null,\n            title: pois[i].title || null,\n            latitude: (pois[i].location && pois[i].location.lat) || null,\n            longitude: (pois[i].location && pois[i].location.lng) || null,\n            address: pois[i].address || null,\n            category: pois[i].category || null,\n            adcode: (pois[i].ad_info && pois[i].ad_info.adcode) || null,\n            city: (pois[i].ad_info && pois[i].ad_info.city) || null,\n            district: (pois[i].ad_info && pois[i].ad_info.district) || null,\n            province: (pois[i].ad_info && pois[i].ad_info.province) || null,\n          })\n        }\n        param.success(data, {\n          reverseGeocoderResult: reverseGeocoderResult,\n          reverseGeocoderSimplify: reverseGeocoderSimplify,\n          pois: pois,\n          poisSimplify: poisSimplify,\n        })\n      } else {\n        param.success(data, {\n          reverseGeocoderResult: reverseGeocoderResult,\n          reverseGeocoderSimplify: reverseGeocoderSimplify,\n        })\n      }\n    } else if (feature == 'geocoder') {\n      var geocoderResult = data.result\n      var geocoderSimplify = {\n        title: geocoderResult.title || null,\n        latitude: (geocoderResult.location && geocoderResult.location.lat) || null,\n        longitude: (geocoderResult.location && geocoderResult.location.lng) || null,\n        adcode: (geocoderResult.ad_info && geocoderResult.ad_info.adcode) || null,\n        province:\n          (geocoderResult.address_components && geocoderResult.address_components.province) || null,\n        city: (geocoderResult.address_components && geocoderResult.address_components.city) || null,\n        district:\n          (geocoderResult.address_components && geocoderResult.address_components.district) || null,\n        street:\n          (geocoderResult.address_components && geocoderResult.address_components.street) || null,\n        street_number:\n          (geocoderResult.address_components && geocoderResult.address_components.street_number) ||\n          null,\n        level: geocoderResult.level || null,\n      }\n      param.success(data, {\n        geocoderResult: geocoderResult,\n        geocoderSimplify: geocoderSimplify,\n      })\n    } else if (feature == 'getCityList') {\n      var provinceResult = data.result[0]\n      var cityResult = data.result[1]\n      var districtResult = data.result[2]\n      param.success(data, {\n        provinceResult: provinceResult,\n        cityResult: cityResult,\n        districtResult: districtResult,\n      })\n    } else if (feature == 'getDistrictByCityId') {\n      var districtByCity = data.result[0]\n      param.success(data, districtByCity)\n    } else if (feature == 'calculateDistance') {\n      var calculateDistanceResult = data.result.elements\n      var distance = []\n      for (var i = 0; i < calculateDistanceResult.length; i++) {\n        distance.push(calculateDistanceResult[i].distance)\n      }\n      param.success(data, {\n        calculateDistanceResult: calculateDistanceResult,\n        distance: distance,\n      })\n    } else if (feature == 'direction') {\n      var direction = data.result.routes\n      param.success(data, direction)\n    } else {\n      param.success(data)\n    }\n  },\n\n  /**\n   * 构造微信请求参数，公共属性处理\n   *\n   * @param {Object} param 接口参数\n   * @param {Object} param 配置项\n   * @param {String} feature 方法名\n   */\n  buildWxRequestConfig(param, options, feature) {\n    var that = this\n    options.header = {\n      'content-type': 'application/json',\n    }\n    options.method = 'GET'\n    options.success = function (res) {\n      var data = res.data\n      if (data.status === 0) {\n        that.handleData(param, data, feature)\n      } else {\n        param.fail(data)\n      }\n    }\n    options.fail = function (res) {\n      res.statusCode = ERROR_CONF.WX_ERR_CODE\n      param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg))\n    }\n    options.complete = function (res) {\n      var statusCode = +res.statusCode\n      switch (statusCode) {\n        case ERROR_CONF.WX_ERR_CODE: {\n          param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg))\n          break\n        }\n        case ERROR_CONF.WX_OK_CODE: {\n          var data = res.data\n          if (data.status === 0) {\n            param.complete(data)\n          } else {\n            param.complete(that.buildErrorConfig(data.status, data.message))\n          }\n          break\n        }\n        default: {\n          param.complete(that.buildErrorConfig(ERROR_CONF.SYSTEM_ERR, ERROR_CONF.SYSTEM_ERR_MSG))\n        }\n      }\n    }\n    return options\n  },\n\n  /**\n   * 处理用户参数是否传入坐标进行不同的处理\n   */\n  locationProcess(param, locationsuccess, locationfail, locationcomplete) {\n    var that = this\n    locationfail =\n      locationfail ||\n      function (res) {\n        res.statusCode = ERROR_CONF.WX_ERR_CODE\n        param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg))\n      }\n    locationcomplete =\n      locationcomplete ||\n      function (res) {\n        if (res.statusCode == ERROR_CONF.WX_ERR_CODE) {\n          param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg))\n        }\n      }\n    if (!param.location) {\n      that.getWXLocation(locationsuccess, locationfail, locationcomplete)\n    } else if (that.checkLocation(param)) {\n      var location = Utils.getLocationParam(param.location)\n      locationsuccess(location)\n    }\n  },\n}\n\nclass QQMapWX {\n  /**\n   * 构造函数\n   *\n   * @param {Object} options 接口参数,key 为必选参数\n   */\n  constructor(options) {\n    if (!options.key) {\n      throw Error('key值不能为空')\n    }\n    this.key = options.key\n  }\n\n  /**\n   * POI周边检索\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 参数对象结构可以参考\n   * @see http://lbs.qq.com/webservice_v1/guide-search.html\n   */\n  search(options) {\n    var that = this\n    options = options || {}\n\n    Utils.polyfillParam(options)\n\n    if (!Utils.checkKeyword(options)) {\n      return\n    }\n\n    var requestParam = {\n      keyword: options.keyword,\n      orderby: options.orderby || '_distance',\n      page_size: options.page_size || 10,\n      page_index: options.page_index || 1,\n      output: 'json',\n      key: that.key,\n    }\n\n    if (options.address_format) {\n      requestParam.address_format = options.address_format\n    }\n\n    if (options.filter) {\n      requestParam.filter = options.filter\n    }\n\n    var distance = options.distance || '1000'\n    var auto_extend = options.auto_extend || 1\n    var region = null\n    var rectangle = null\n\n    //判断城市限定参数\n    if (options.region) {\n      region = options.region\n    }\n\n    //矩形限定坐标(暂时只支持字符串格式)\n    if (options.rectangle) {\n      rectangle = options.rectangle\n    }\n\n    var locationsuccess = function (result) {\n      if (region && !rectangle) {\n        //城市限定参数拼接\n        requestParam.boundary =\n          'region(' +\n          region +\n          ',' +\n          auto_extend +\n          ',' +\n          result.latitude +\n          ',' +\n          result.longitude +\n          ')'\n        if (options.sig) {\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'search')\n        }\n      } else if (rectangle && !region) {\n        //矩形搜索\n        requestParam.boundary = 'rectangle(' + rectangle + ')'\n        if (options.sig) {\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'search')\n        }\n      } else {\n        requestParam.boundary =\n          'nearby(' +\n          result.latitude +\n          ',' +\n          result.longitude +\n          ',' +\n          distance +\n          ',' +\n          auto_extend +\n          ')'\n        if (options.sig) {\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'search')\n        }\n      }\n      wx.request(\n        Utils.buildWxRequestConfig(\n          options,\n          {\n            url: URL_SEARCH,\n            data: requestParam,\n          },\n          'search',\n        ),\n      )\n    }\n    Utils.locationProcess(options, locationsuccess)\n  }\n\n  /**\n   * sug模糊检索\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 参数对象结构可以参考\n   * http://lbs.qq.com/webservice_v1/guide-suggestion.html\n   */\n  getSuggestion(options) {\n    var that = this\n    options = options || {}\n    Utils.polyfillParam(options)\n\n    if (!Utils.checkKeyword(options)) {\n      return\n    }\n\n    var requestParam = {\n      keyword: options.keyword,\n      region: options.region || '全国',\n      region_fix: options.region_fix || 0,\n      policy: options.policy || 0,\n      page_size: options.page_size || 10, //控制显示条数\n      page_index: options.page_index || 1, //控制页数\n      get_subpois: options.get_subpois || 0, //返回子地点\n      output: 'json',\n      key: that.key,\n    }\n    //长地址\n    if (options.address_format) {\n      requestParam.address_format = options.address_format\n    }\n    //过滤\n    if (options.filter) {\n      requestParam.filter = options.filter\n    }\n    //排序\n    if (options.location) {\n      var locationsuccess = function (result) {\n        requestParam.location = result.latitude + ',' + result.longitude\n        if (options.sig) {\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest')\n        }\n        wx.request(\n          Utils.buildWxRequestConfig(\n            options,\n            {\n              url: URL_SUGGESTION,\n              data: requestParam,\n            },\n            'suggest',\n          ),\n        )\n      }\n      Utils.locationProcess(options, locationsuccess)\n    } else {\n      if (options.sig) {\n        requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest')\n      }\n      wx.request(\n        Utils.buildWxRequestConfig(\n          options,\n          {\n            url: URL_SUGGESTION,\n            data: requestParam,\n          },\n          'suggest',\n        ),\n      )\n    }\n  }\n\n  /**\n   * 逆地址解析\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 请求参数结构可以参考\n   * http://lbs.qq.com/webservice_v1/guide-gcoder.html\n   */\n  reverseGeocoder(options) {\n    var that = this\n    options = options || {}\n    Utils.polyfillParam(options)\n    var requestParam = {\n      coord_type: options.coord_type || 5,\n      get_poi: options.get_poi || 0,\n      output: 'json',\n      key: that.key,\n    }\n    if (options.poi_options) {\n      requestParam.poi_options = options.poi_options\n    }\n\n    var locationsuccess = function (result) {\n      requestParam.location = result.latitude + ',' + result.longitude\n      if (options.sig) {\n        requestParam.sig = Utils.getSig(requestParam, options.sig, 'reverseGeocoder')\n      }\n      wx.request(\n        Utils.buildWxRequestConfig(\n          options,\n          {\n            url: URL_GET_GEOCODER,\n            data: requestParam,\n          },\n          'reverseGeocoder',\n        ),\n      )\n    }\n    Utils.locationProcess(options, locationsuccess)\n  }\n\n  /**\n   * 地址解析\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 请求参数结构可以参考\n   * http://lbs.qq.com/webservice_v1/guide-geocoder.html\n   */\n  geocoder(options) {\n    var that = this\n    options = options || {}\n    Utils.polyfillParam(options)\n\n    if (Utils.checkParamKeyEmpty(options, 'address')) {\n      return\n    }\n\n    var requestParam = {\n      address: options.address,\n      output: 'json',\n      key: that.key,\n    }\n\n    //城市限定\n    if (options.region) {\n      requestParam.region = options.region\n    }\n\n    if (options.sig) {\n      requestParam.sig = Utils.getSig(requestParam, options.sig, 'geocoder')\n    }\n\n    wx.request(\n      Utils.buildWxRequestConfig(\n        options,\n        {\n          url: URL_GET_GEOCODER,\n          data: requestParam,\n        },\n        'geocoder',\n      ),\n    )\n  }\n\n  /**\n   * 获取城市列表\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 请求参数结构可以参考\n   * http://lbs.qq.com/webservice_v1/guide-region.html\n   */\n  getCityList(options) {\n    var that = this\n    options = options || {}\n    Utils.polyfillParam(options)\n    var requestParam = {\n      output: 'json',\n      key: that.key,\n    }\n\n    if (options.sig) {\n      requestParam.sig = Utils.getSig(requestParam, options.sig, 'getCityList')\n    }\n\n    wx.request(\n      Utils.buildWxRequestConfig(\n        options,\n        {\n          url: URL_CITY_LIST,\n          data: requestParam,\n        },\n        'getCityList',\n      ),\n    )\n  }\n\n  /**\n   * 获取对应城市ID的区县列表\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 请求参数结构可以参考\n   * http://lbs.qq.com/webservice_v1/guide-region.html\n   */\n  getDistrictByCityId(options) {\n    var that = this\n    options = options || {}\n    Utils.polyfillParam(options)\n\n    if (Utils.checkParamKeyEmpty(options, 'id')) {\n      return\n    }\n\n    var requestParam = {\n      id: options.id || '',\n      output: 'json',\n      key: that.key,\n    }\n\n    if (options.sig) {\n      requestParam.sig = Utils.getSig(requestParam, options.sig, 'getDistrictByCityId')\n    }\n\n    wx.request(\n      Utils.buildWxRequestConfig(\n        options,\n        {\n          url: URL_AREA_LIST,\n          data: requestParam,\n        },\n        'getDistrictByCityId',\n      ),\n    )\n  }\n\n  /**\n   * 用于单起点到多终点的路线距离(非直线距离)计算：\n   * 支持两种距离计算方式：步行和驾车。\n   * 起点到终点最大限制直线距离10公里。\n   *\n   * 新增直线距离计算。\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 请求参数结构可以参考\n   * http://lbs.qq.com/webservice_v1/guide-distance.html\n   */\n  calculateDistance(options) {\n    var that = this\n    options = options || {}\n    Utils.polyfillParam(options)\n\n    if (Utils.checkParamKeyEmpty(options, 'to')) {\n      return\n    }\n\n    var requestParam = {\n      mode: options.mode || 'walking',\n      to: Utils.location2query(options.to),\n      output: 'json',\n      key: that.key,\n    }\n\n    if (options.from) {\n      options.location = options.from\n    }\n\n    //计算直线距离\n    if (requestParam.mode == 'straight') {\n      var locationsuccess = function (result) {\n        var locationTo = Utils.getEndLocation(requestParam.to) //处理终点坐标\n        var data = {\n          message: 'query ok',\n          result: {\n            elements: [],\n          },\n          status: 0,\n        }\n        for (var i = 0; i < locationTo.length; i++) {\n          data.result.elements.push({\n            //将坐标存入\n            distance: Utils.getDistance(\n              result.latitude,\n              result.longitude,\n              locationTo[i].lat,\n              locationTo[i].lng,\n            ),\n            duration: 0,\n            from: {\n              lat: result.latitude,\n              lng: result.longitude,\n            },\n            to: {\n              lat: locationTo[i].lat,\n              lng: locationTo[i].lng,\n            },\n          })\n        }\n        var calculateResult = data.result.elements\n        var distanceResult = []\n        for (var i = 0; i < calculateResult.length; i++) {\n          distanceResult.push(calculateResult[i].distance)\n        }\n        return options.success(data, {\n          calculateResult: calculateResult,\n          distanceResult: distanceResult,\n        })\n      }\n\n      Utils.locationProcess(options, locationsuccess)\n    } else {\n      var locationsuccess = function (result) {\n        requestParam.from = result.latitude + ',' + result.longitude\n        if (options.sig) {\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'calculateDistance')\n        }\n        wx.request(\n          Utils.buildWxRequestConfig(\n            options,\n            {\n              url: URL_DISTANCE,\n              data: requestParam,\n            },\n            'calculateDistance',\n          ),\n        )\n      }\n\n      Utils.locationProcess(options, locationsuccess)\n    }\n  }\n\n  /**\n   * 路线规划：\n   *\n   * @param {Object} options 接口参数对象\n   *\n   * 请求参数结构可以参考\n   * https://lbs.qq.com/webservice_v1/guide-road.html\n   */\n  direction(options) {\n    var that = this\n    options = options || {}\n    Utils.polyfillParam(options)\n\n    if (Utils.checkParamKeyEmpty(options, 'to')) {\n      return\n    }\n\n    var requestParam = {\n      output: 'json',\n      key: that.key,\n    }\n\n    //to格式处理\n    if (typeof options.to == 'string') {\n      requestParam.to = options.to\n    } else {\n      requestParam.to = options.to.latitude + ',' + options.to.longitude\n    }\n    //初始化局部请求域名\n    var SET_URL_DIRECTION = null\n    //设置默认mode属性\n    options.mode = options.mode || MODE.driving\n\n    //设置请求域名\n    SET_URL_DIRECTION = URL_DIRECTION + options.mode\n\n    if (options.from) {\n      options.location = options.from\n    }\n\n    if (options.mode == MODE.driving) {\n      if (options.from_poi) {\n        requestParam.from_poi = options.from_poi\n      }\n      if (options.heading) {\n        requestParam.heading = options.heading\n      }\n      if (options.speed) {\n        requestParam.speed = options.speed\n      }\n      if (options.accuracy) {\n        requestParam.accuracy = options.accuracy\n      }\n      if (options.road_type) {\n        requestParam.road_type = options.road_type\n      }\n      if (options.to_poi) {\n        requestParam.to_poi = options.to_poi\n      }\n      if (options.from_track) {\n        requestParam.from_track = options.from_track\n      }\n      if (options.waypoints) {\n        requestParam.waypoints = options.waypoints\n      }\n      if (options.policy) {\n        requestParam.policy = options.policy\n      }\n      if (options.plate_number) {\n        requestParam.plate_number = options.plate_number\n      }\n    }\n\n    if (options.mode == MODE.transit) {\n      if (options.departure_time) {\n        requestParam.departure_time = options.departure_time\n      }\n      if (options.policy) {\n        requestParam.policy = options.policy\n      }\n    }\n\n    var locationsuccess = function (result) {\n      requestParam.from = result.latitude + ',' + result.longitude\n      if (options.sig) {\n        requestParam.sig = Utils.getSig(requestParam, options.sig, 'direction', options.mode)\n      }\n      wx.request(\n        Utils.buildWxRequestConfig(\n          options,\n          {\n            url: SET_URL_DIRECTION,\n            data: requestParam,\n          },\n          'direction',\n        ),\n      )\n    }\n\n    Utils.locationProcess(options, locationsuccess)\n  }\n}\n\nexport default QQMapWX\n"],"names":["wx"],"mappings":"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"}