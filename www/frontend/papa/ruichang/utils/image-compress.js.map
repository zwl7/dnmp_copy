{"version":3,"file":"image-compress.js","sources":["../../../../src/utils/image-compress.js"],"sourcesContent":["var offCanvas, ctx, fs, dirPath\n// #ifdef MP-WEIXIN\nfs = uni.getFileSystemManager()\ndirPath = `${uni.env.USER_DATA_PATH}/compress-img`\n// #endif\n// #ifdef H5\nfs = uni\n// #endif\nvar filePath = null\nvar imgWidth = 0\nvar imgHeight = 0\nvar imgSize = 0\n\nconst self = {\n  int() {\n    if (!offCanvas) {\n      offCanvas = uni.createOffscreenCanvas({\n        type: '2d',\n        width: 300,\n        height: 300,\n      })\n    }\n    if (!ctx) ctx = offCanvas.getContext('2d')\n  },\n\n  // changeType 是否强制转换图片类型\n  async set(src, maxsize = 1024, changeType = false) {\n    self.int()\n    filePath = src\n    let i = 0\n    let istrue = false\n    do {\n      i++\n      await new Promise((resolve) => {\n        fs.getFileInfo({\n          filePath: filePath,\n          async success(res) {\n            // console.info(res)\n            imgSize = res.size\n            if (res.size > maxsize * 1024 || (changeType && i < 2)) {\n              await self.compress(filePath, false)\n            } else {\n              await self.compress(filePath, true)\n              istrue = true\n            }\n            resolve()\n          },\n        })\n      })\n    } while (!istrue && i < 50)\n\n    return {\n      filePath: filePath,\n      width: imgWidth,\n      height: imgHeight,\n      size: imgSize,\n    }\n  },\n\n  async compress(src, onlyGetWH = false) {\n    let imageItem = offCanvas.createImage() // 图片对象\n    imageItem.src = src // 设置图片src\n    imageItem.onerror = (err) => {\n      console.log('err', err)\n      uni.showModal({\n        title: '提示',\n        content: '照片加载失败',\n        confirmText: '关闭',\n        showCancel: false,\n      })\n    }\n\n    // 如果图片已经存在于浏览器缓存\n    if (imageItem.width > 0) {\n      if (onlyGetWH) {\n        imgWidth = imageItem.width\n        imgHeight = imageItem.height\n      } else {\n        self._imgLoaded(imageItem)\n      }\n    } else {\n      await new Promise((resolve) => {\n        imageItem.onload = () => {\n          if (onlyGetWH) {\n            imgWidth = imageItem.width\n            imgHeight = imageItem.height\n          } else {\n            self._imgLoaded(imageItem)\n          }\n\n          resolve()\n        }\n      })\n    }\n  },\n\n  async _imgLoaded(img) {\n    let yinzi = 0.95\n    if (img.width > 2048 || img.height > 2048)\n      yinzi = img.height > img.width ? 2048 / img.height : 2048 / img.width\n\n    imgWidth = img.width * yinzi\n    imgHeight = img.height * yinzi\n\n    offCanvas.width = imgWidth\n    offCanvas.height = imgHeight\n    ctx.clearRect(0, 0, imgWidth, imgHeight)\n    ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, offCanvas.width, offCanvas.height)\n\n    fs.mkdir({\n      dirPath: dirPath,\n      recursive: false,\n      // fail(res) {\n      //   console.error(res)\n      // }\n    })\n\n    const tempPath = `${dirPath}/${new Date().getTime()}.jpg`\n    const dataURL = offCanvas.toDataURL('image/jpeg', 0.92).replace('data:image/jpeg;base64,', '')\n    try {\n      fs.writeFileSync(tempPath, dataURL, 'base64')\n      filePath = tempPath\n    } catch (e) {\n      console.error(e)\n    }\n  },\n  clearTempImg() {\n    try {\n      offCanvas = null\n      ctx = null\n      // 适当的时候删除临时文件\n      uni.getFileSystemManager().rmdir({\n        dirPath: dirPath,\n        recursive: true,\n        // fail(res) {\n        //   console.error(res)\n        // }\n      })\n    } catch (error) {\n      console.info(error)\n    }\n  },\n}\n\nexport default {\n  set: self.set,\n  clearTempImg: self.clearTempImg,\n}\n"],"names":["uni"],"mappings":"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"}