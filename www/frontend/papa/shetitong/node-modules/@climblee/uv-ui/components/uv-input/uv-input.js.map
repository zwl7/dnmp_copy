{"version":3,"file":"uv-input.js","sources":["../../../../../../../../node_modules/@climblee/uv-ui/components/uv-input/uv-input.vue","../../../../../../../../uniComponent:/L1VzZXJzL2d1b3hpYW9taW5nL2NvZGUvcGFwYS1jb2RlL3BtLXluL3VuaWFwcC1zb2NpYWwtc3BvcnRzLW5ldy9ub2RlX21vZHVsZXMvQGNsaW1ibGVlL3V2LXVpL2NvbXBvbmVudHMvdXYtaW5wdXQvdXYtaW5wdXQudnVl"],"sourcesContent":["<template>\r\n    <view class=\"uv-input\" :class=\"inputClass\" :style=\"[wrapperStyle]\">\r\n      <view class=\"uv-input__content\">\r\n        <view class=\"uv-input__content__prefix-icon\">\r\n          <slot name=\"prefix\">\r\n            <uv-icon\r\n\t\t\t\t\t\t\tv-if=\"prefixIcon\"\r\n              :name=\"prefixIcon\"\r\n              size=\"18\"\r\n              :customStyle=\"prefixIconStyle\"\r\n            ></uv-icon>\r\n          </slot>\r\n        </view>\r\n        <view class=\"uv-input__content__field-wrapper\" @click=\"clickHandler\">\r\n\t\t\t\t<!-- 根据uni-app的input组件文档，H5和APP中只要声明了password参数(无论true还是false)，type均失效，此时\r\n\t\t\t\t为了防止type=number时，又存在password属性，type无效，此时需要设置password为undefined\r\n\t\t\t -->\r\n        \t<input\r\n        \t  class=\"uv-input__content__field-wrapper__field\"\r\n        \t  :style=\"[inputStyle]\"\r\n        \t  :type=\"type\"\r\n        \t  :focus=\"focus\"\r\n        \t  :cursor=\"cursor\"\r\n        \t  :value=\"innerValue\"\r\n        \t  :auto-blur=\"autoBlur\"\r\n        \t  :disabled=\"disabled || readonly\"\r\n        \t  :maxlength=\"maxlength\"\r\n        \t  :placeholder=\"placeholder\"\r\n        \t  :placeholder-style=\"placeholderStyle\"\r\n        \t  :placeholder-class=\"placeholderClass\"\r\n        \t  :confirm-type=\"confirmType\"\r\n        \t  :confirm-hold=\"confirmHold\"\r\n        \t  :hold-keyboard=\"holdKeyboard\"\r\n        \t  :cursor-spacing=\"cursorSpacing\"\r\n        \t  :adjust-position=\"adjustPosition\"\r\n        \t  :selection-end=\"selectionEnd\"\r\n        \t  :selection-start=\"selectionStart\"\r\n        \t  :password=\"password || type === 'password' || undefined\"\r\n            :ignoreCompositionEvent=\"ignoreCompositionEvent\"\r\n        \t  @input=\"onInput\"\r\n        \t  @blur=\"onBlur\"\r\n        \t  @focus=\"onFocus\"\r\n        \t  @confirm=\"onConfirm\"\r\n        \t  @keyboardheightchange=\"onkeyboardheightchange\"\r\n        \t/>\r\n        </view>\r\n        <view\r\n          class=\"uv-input__content__clear\"\r\n          v-if=\"isShowClear\"\r\n          @tap=\"onClear\"\r\n        >\r\n          <uv-icon\r\n            name=\"close\"\r\n            size=\"11\"\r\n            color=\"#ffffff\"\r\n            customStyle=\"line-height: 12px\"\r\n          ></uv-icon>\r\n        </view>\r\n        <view class=\"uv-input__content__subfix-icon\">\r\n          <slot name=\"suffix\">\r\n            <uv-icon\r\n\t\t\t\t\t\t\tv-if=\"suffixIcon\"\r\n              :name=\"suffixIcon\"\r\n              size=\"18\"\r\n              :customStyle=\"suffixIconStyle\"\r\n            ></uv-icon>\r\n          </slot>\r\n        </view>\r\n      </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n\timport mpMixin from '../../libs/mixin/mpMixin.js'\r\n\timport mixin from '../../libs/mixin/mixin.js'\r\n\timport props from \"./props.js\";\r\n\t/**\r\n\t * Input 输入框\r\n\t * @description  此组件为一个输入框，默认没有边框和样式，是专门为配合表单组件uv-form而设计的，利用它可以快速实现表单验证，输入内容，下拉选择等功能。\r\n\t * @tutorial https://www.uvui.cn/components/input.html\r\n\t * @property {String | Number}\tvalue\t\t\t\t\t输入的值\r\n\t * @property {String}\t\t\ttype\t\t\t\t\t输入框类型，见上方说明 （ 默认 'text' ）\r\n\t * @property {Boolean}\t\t\tfixed\t\t\t\t\t如果 textarea 是在一个 position:fixed 的区域，需要显示指定属性 fixed 为 true，兼容性：微信小程序、百度小程序、字节跳动小程序、QQ小程序 （ 默认 false ）\r\n\t * @property {Boolean}\t\t\tdisabled\t\t\t\t是否禁用输入框 （ 默认 false ）\r\n\t * @property {String}\t\t\tdisabledColor\t\t\t禁用状态时的背景色（ 默认 '#f5f7fa' ）\r\n\t * @property {Boolean}\t\t\tclearable\t\t\t\t是否显示清除控件 （ 默认 false ）\r\n\t * @property {Boolean}\t\t\tpassword\t\t\t\t是否密码类型 （ 默认 false ）\r\n\t * @property {String | Number}\tmaxlength\t\t\t\t最大输入长度，设置为 -1 的时候不限制最大长度 （ 默认 -1 ）\r\n\t * @property {String}\t\t\tplaceholder\t\t\t\t输入框为空时的占位符\r\n\t * @property {String}\t\t\tplaceholderClass\t\t指定placeholder的样式类，注意页面或组件的style中写了scoped时，需要在类名前写/deep/ （ 默认 'input-placeholder' ）\r\n\t * @property {String | Object}\tplaceholderStyle\t\t指定placeholder的样式，字符串/对象形式，如\"color: red;\"\r\n\t * @property {Boolean}\t\t\tshowWordLimit\t\t\t是否显示输入字数统计，只在 type =\"text\"或type =\"textarea\"时有效 （ 默认 false ）\r\n\t * @property {String}\t\t\tconfirmType\t\t\t\t设置右下角按钮的文字，兼容性详见uni-app文档 （ 默认 'done' ）\r\n\t * @property {Boolean}\t\t\tconfirmHold\t\t\t\t点击键盘右下角按钮时是否保持键盘不收起，H5无效 （ 默认 false ）\r\n\t * @property {Boolean}\t\t\tholdKeyboard\t\t\tfocus时，点击页面的时候不收起键盘，微信小程序有效 （ 默认 false ）\r\n\t * @property {Boolean}\t\t\tfocus\t\t\t\t\t自动获取焦点，在 H5 平台能否聚焦以及软键盘是否跟随弹出，取决于当前浏览器本身的实现。nvue 页面不支持，需使用组件的 focus()、blur() 方法控制焦点 （ 默认 false ）\r\n\t * @property {Boolean}\t\t\tautoBlur\t\t\t\t键盘收起时，是否自动失去焦点，目前仅App3.0.0+有效 （ 默认 false ）\r\n\t * @property {Boolean}\t\t\tdisableDefaultPadding\t是否去掉 iOS 下的默认内边距，仅微信小程序，且type=textarea时有效 （ 默认 false ）\r\n\t * @property {String ｜ Number}\tcursor\t\t\t\t\t指定focus时光标的位置（ 默认 -1 ）\r\n\t * @property {String ｜ Number}\tcursorSpacing\t\t\t输入框聚焦时底部与键盘的距离 （ 默认 30 ）\r\n\t * @property {String ｜ Number}\tselectionStart\t\t\t光标起始位置，自动聚集时有效，需与selection-end搭配使用 （ 默认 -1 ）\r\n\t * @property {String ｜ Number}\tselectionEnd\t\t\t光标结束位置，自动聚集时有效，需与selection-start搭配使用 （ 默认 -1 ）\r\n\t * @property {Boolean}\t\t\tadjustPosition\t\t\t键盘弹起时，是否自动上推页面 （ 默认 true ）\r\n\t * @property {String}\t\t\tinputAlign\t\t\t\t输入框内容对齐方式（ 默认 'left' ）\r\n\t * @property {String | Number}\tfontSize\t\t\t\t输入框字体的大小 （ 默认 '15px' ）\r\n\t * @property {String}\t\t\tcolor\t\t\t\t\t输入框字体颜色\t（ 默认 '#303133' ）\r\n\t * @property {Function}\t\t\tformatter\t\t\t    内容式化函数\r\n\t * @property {String}\t\t\tprefixIcon\t\t\t\t输入框前置图标\r\n\t * @property {String | Object}\tprefixIconStyle\t\t\t前置图标样式，对象或字符串\r\n\t * @property {String}\t\t\tsuffixIcon\t\t\t\t输入框后置图标\r\n\t * @property {String | Object}\tsuffixIconStyle\t\t\t后置图标样式，对象或字符串\r\n\t * @property {String}\t\t\tborder\t\t\t\t\t边框类型，surround-四周边框，bottom-底部边框，none-无边框 （ 默认 'surround' ）\r\n\t * @property {Boolean}\t\t\treadonly\t\t\t\t是否只读，与disabled不同之处在于disabled会置灰组件，而readonly则不会 （ 默认 false ）\r\n\t * @property {String}\t\t\tshape\t\t\t\t\t输入框形状，circle-圆形，square-方形 （ 默认 'square' ）\r\n\t * @property {Object}\t\t\tcustomStyle\t\t\t\t定义需要用到的外部样式\r\n\t * @property {Boolean}\t\t\tignoreCompositionEvent\t是否忽略组件内对文本合成系统事件的处理。\r\n\t * @example <uv-input v-model=\"value\" :password=\"true\" suffix-icon=\"lock-fill\" />\r\n\t */\r\n\texport default {\r\n\t\tname: \"uv-input\",\r\n\t\tmixins: [mpMixin, mixin, props],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t// 输入框的值\r\n\t\t\t\tinnerValue: \"\",\r\n\t\t\t\t// 是否处于获得焦点状态\r\n\t\t\t\tfocused: false,\r\n\t\t\t\t// 过滤处理方法\r\n\t\t\t\tinnerFormatter: value => value\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// #ifdef VUE2\r\n\t\t\tthis.innerValue = this.value;\r\n\t\t\t// #endif\r\n\t\t\t// #ifdef VUE3\r\n\t\t\tthis.innerValue = this.modelValue;\r\n\t\t\t// #endif\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tvalue(newVal){\r\n\t\t\t\tthis.innerValue = newVal;\r\n\t\t\t},\r\n\t\t\tmodelValue(newVal){\r\n\t\t\t\tthis.innerValue = newVal;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t// 是否显示清除控件\r\n\t\t\tisShowClear() {\r\n\t\t\t\tconst { clearable, readonly, focused, innerValue } = this;\r\n\t\t\t\treturn !!clearable && !readonly && !!focused && innerValue !== \"\";\r\n\t\t\t},\r\n\t\t\t// 组件的类名\r\n\t\t\tinputClass() {\r\n\t\t\t\tlet classes = [],\r\n\t\t\t\t\t{ border, disabled, shape } = this;\r\n\t\t\t\tborder === \"surround\" &&\r\n\t\t\t\t\t(classes = classes.concat([\"uv-border\", \"uv-input--radius\"]));\r\n\t\t\t\tclasses.push(`uv-input--${shape}`);\r\n\t\t\t\tborder === \"bottom\" &&\r\n\t\t\t\t\t(classes = classes.concat([\r\n\t\t\t\t\t\t\"uv-border-bottom\",\r\n\t\t\t\t\t\t\"uv-input--no-radius\",\r\n\t\t\t\t\t]));\r\n\t\t\t\treturn classes.join(\" \");\r\n\t\t\t},\r\n\t\t\t// 组件的样式\r\n\t\t\twrapperStyle() {\r\n\t\t\t\tconst style = {};\r\n\t\t\t\t// 禁用状态下，被背景色加上对应的样式\r\n\t\t\t\tif (this.disabled) {\r\n\t\t\t\t\tstyle.backgroundColor = this.disabledColor;\r\n\t\t\t\t}\r\n\t\t\t\t// 无边框时，去除内边距\r\n\t\t\t\tif (this.border === \"none\") {\r\n\t\t\t\t\tstyle.padding = \"0\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 由于uni-app的iOS开发者能力有限，导致需要分开写才有效\r\n\t\t\t\t\tstyle.paddingTop = \"6px\";\r\n\t\t\t\t\tstyle.paddingBottom = \"6px\";\r\n\t\t\t\t\tstyle.paddingLeft = \"9px\";\r\n\t\t\t\t\tstyle.paddingRight = \"9px\";\r\n\t\t\t\t}\r\n\t\t\t\treturn this.$uv.deepMerge(style, this.$uv.addStyle(this.customStyle));\r\n\t\t\t},\r\n\t\t\t// 输入框的样式\r\n\t\t\tinputStyle() {\r\n\t\t\t\tconst style = {\r\n\t\t\t\t\tcolor: this.color,\r\n\t\t\t\t\tfontSize: this.$uv.addUnit(this.fontSize),\r\n\t\t\t\t\ttextAlign: this.inputAlign\r\n\t\t\t\t};\r\n\t\t\t\t// #ifndef APP-NVUE\r\n\t\t\t\tif(this.disabled || this.readonly) {\r\n\t\t\t\t\tstyle['pointer-events'] = 'none';\r\n\t\t\t\t}\r\n\t\t\t\t// #endif\r\n\t\t\t\treturn style;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 在微信小程序中，不支持将函数当做props参数，故只能通过ref形式调用\r\n\t\t\tsetFormatter(e) {\r\n\t\t\t\tthis.innerFormatter = e\r\n\t\t\t},\r\n\t\t\t// 当键盘输入时，触发input事件\r\n\t\t\tonInput(e) {\r\n\t\t\t\tlet { value = \"\" } = e.detail || {};\r\n\t\t\t\t// 格式化过滤方法\r\n\t\t\t\tconst formatter = this.formatter || this.innerFormatter\r\n\t\t\t\tconst formatValue = formatter(value)\r\n\t\t\t\t// 为了避免props的单向数据流特性，需要先将innerValue值设置为当前值，再在$nextTick中重新赋予设置后的值才有效\r\n\t\t\t\tthis.innerValue = value\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tthis.innerValue = formatValue;\r\n\t\t\t\t\tthis.valueChange();\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 输入框失去焦点时触发\r\n\t\t\tonBlur(event) {\r\n\t\t\t\tthis.$emit(\"blur\", event.detail.value);\r\n\t\t\t\t// H5端的blur会先于点击清除控件的点击click事件触发，导致focused\r\n\t\t\t\t// 瞬间为false，从而隐藏了清除控件而无法被点击到\r\n\t\t\t\tthis.$uv.sleep(100).then(() => {\r\n\t\t\t\t\tthis.focused = false;\r\n\t\t\t\t});\r\n\t\t\t\t// 尝试调用uv-form的验证方法\r\n\t\t\t\tthis.$uv.formValidate(this, \"blur\");\r\n\t\t\t},\r\n\t\t\t// 输入框聚焦时触发\r\n\t\t\tonFocus(event) {\r\n\t\t\t\tthis.focused = true;\r\n\t\t\t\tthis.$emit(\"focus\");\r\n\t\t\t},\r\n\t\t\t// 点击完成按钮时触发\r\n\t\t\tonConfirm(event) {\r\n\t\t\t\tthis.$emit(\"confirm\", this.innerValue);\r\n\t\t\t},\r\n\t\t\t// 键盘高度发生变化的时候触发此事件\r\n\t\t\t// 兼容性：微信小程序2.7.0+、App 3.1.0+\r\n\t\t\tonkeyboardheightchange(e) {\r\n\t\t\t\tthis.$emit(\"keyboardheightchange\",e);\r\n\t\t\t},\r\n\t\t\t// 内容发生变化，进行处理\r\n\t\t\tvalueChange() {\r\n\t\t\t\tif(this.isClear) this.innerValue = '';\r\n\t\t\t\tconst value = this.innerValue;\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tthis.$emit(\"input\", value);\r\n\t\t\t\t\tthis.$emit(\"update:modelValue\", value);\r\n\t\t\t\t\tthis.$emit(\"change\", value);\r\n\t\t\t\t\t// 尝试调用uv-form的验证方法\r\n\t\t\t\t\tthis.$uv.formValidate(this, \"change\");\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// 点击清除控件\r\n\t\t\tonClear() {\r\n\t\t\t\tthis.innerValue = \"\";\r\n\t\t\t\tthis.isClear = true;\r\n\t\t\t\tthis.$uv.sleep(100).then(res=>{\r\n\t\t\t\t\tthis.isClear = false;\r\n\t\t\t\t})\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tthis.$emit(\"clear\");\r\n\t\t\t\t\tthis.valueChange();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 在安卓nvue上，事件无法冒泡\r\n\t\t\t * 在某些时间，我们希望监听uv-from-item的点击事件，此时会导致点击uv-form-item内的uv-input后\r\n\t\t\t * 无法触发uv-form-item的点击事件，这里通过手动调用uv-form-item的方法进行触发\r\n\t\t\t */\r\n\t\t\tclickHandler() {\r\n\t\t\t\t// #ifdef APP-NVUE\r\n\t\t\t\tif (this.$uv.os() === \"android\") {\r\n\t\t\t\t\tconst formItem = this.$uv.$parent.call(this, \"uv-form-item\");\r\n\t\t\t\t\tif (formItem) {\r\n\t\t\t\t\t\tformItem.clickHandler();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// #endif\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t$show-border: 1;\r\n\t$show-border-surround: 1;\r\n\t$show-border-bottom: 1;\r\n\t@import '../../libs/css/variable.scss';\r\n\t@import '../../libs/css/components.scss';\r\n\t@import '../../libs/css/color.scss';\r\n\t.uv-input {\r\n\t\t@include flex(row);\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t\tflex: 1;\r\n\t\t&--radius,\r\n\t\t&--square {\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t&--no-radius {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t&--circle {\r\n\t\t\tborder-radius: 100px;\r\n\t\t}\r\n\t\t&__content {\r\n\t\t\tflex: 1;\r\n\t\t\t@include flex(row);\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\t&__field-wrapper {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\t@include flex(row);\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\t&__field {\r\n\t\t\t\t\tline-height: 26px;\r\n\t\t\t\t\ttext-align: left;\r\n\t\t\t\t\tcolor: $uv-main-color;\r\n\t\t\t\t\theight: 24px;\r\n\t\t\t\t\tfont-size: 15px;\r\n\t\t\t\t\tflex: 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&__clear {\r\n\t\t\t\twidth: 20px;\r\n\t\t\t\theight: 20px;\r\n\t\t\t\tborder-radius: 100px;\r\n\t\t\t\tbackground-color: #c6c7cb;\r\n\t\t\t\t@include flex(row);\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\ttransform: scale(0.82);\r\n\t\t\t\tmargin-left: 15px;\r\n\t\t\t}\r\n\t\t\t&__subfix-icon {\r\n\t\t\t\tmargin-left: 4px;\r\n\t\t\t}\r\n\t\t\t&__prefix-icon {\r\n\t\t\t\tmargin-right: 4px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>","import Component from '/Users/guoxiaoming/code/papa-code/pm-yn/uniapp-social-sports-new/node_modules/@climblee/uv-ui/components/uv-input/uv-input.vue'\nwx.createComponent(Component)"],"names":["mpMixin","mixin","props"],"mappings":"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","x_google_ignoreList":[0]}