{"version":3,"file":"uv-album.js","sources":["../../../../../../../../node_modules/@climblee/uv-ui/components/uv-album/uv-album.vue","../../../../../../../../uniComponent:/L1VzZXJzL2d1b3hpYW9taW5nL2NvZGUvcGFwYS1jb2RlL3BtLXluL3VuaWFwcC1zb2NpYWwtc3BvcnRzLW5ldy9ub2RlX21vZHVsZXMvQGNsaW1ibGVlL3V2LXVpL2NvbXBvbmVudHMvdXYtYWxidW0vdXYtYWxidW0udnVl"],"sourcesContent":["<template>\r\n  <view class=\"uv-album\">\r\n    <view\r\n      class=\"uv-album__row\"\r\n      ref=\"uv-album__row\"\r\n      v-for=\"(arr, index) in showUrls\"\r\n      :forComputedUse=\"albumWidth\"\r\n      :key=\"index\"\r\n    >\r\n      <view\r\n        class=\"uv-album__row__wrapper\"\r\n        v-for=\"(item, index1) in arr\"\r\n        :key=\"index1\"\r\n        :style=\"[imageStyle(index + 1, index1 + 1)]\"\r\n        @tap=\"previewFullImage ? onPreviewTap(getSrc(item)) : ''\"\r\n      >\r\n        <image\r\n          :src=\"getSrc(item)\"\r\n          :mode=\"\r\n            urls.length === 1\r\n              ? imageHeight > 0\r\n                ? singleMode\r\n                  : 'widthFix'\r\n                  : multipleMode\r\n          \"\r\n          :style=\"[\r\n            {\r\n              width: imageWidth,\r\n              height: imageHeight\r\n            }\r\n          ]\"\r\n        ></image>\r\n        <view\r\n          v-if=\"\r\n            showMore &&\r\n            urls.length > rowCount * showUrls.length &&\r\n            index === showUrls.length - 1 &&\r\n            index1 === showUrls[showUrls.length - 1].length - 1\r\n          \"\r\n          class=\"uv-album__row__wrapper__text\"\r\n        >\r\n          <uv-text\r\n            :text=\"`+${urls.length - maxCount}`\"\r\n            color=\"#fff\"\r\n            :size=\"$uv.getPx(multipleSize) * 0.3\"\r\n            align=\"center\"\r\n            customStyle=\"justify-content: center\"\r\n          ></uv-text>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n<script>\r\n\timport mpMixin from '../../libs/mixin/mpMixin.js'\r\n\timport mixin from '../../libs/mixin/mixin.js'\r\n\t// #ifdef APP-NVUE\r\n\t// 由于weex为阿里的KPI业绩考核的产物，所以不支持百分比单位，这里需要通过dom查询组件的宽度\r\n\tconst dom = uni.requireNativePlugin('dom')\r\n\t// #endif\r\n\r\n\t/**\r\n\t * Album 相册\r\n\t * @description 本组件提供一个类似相册的功能，让开发者开发起来更加得心应手。减少重复的模板代码\r\n\t * @tutorial https://www.uvui.cn/components/album.html\r\n\t * @property {Array}           urls             图片地址列表 Array<String>|Array<Object>形式\r\n\t * @property {String}          keyName          指定从数组的对象元素中读取哪个属性作为图片地址\r\n\t * @property {String | Number} singleSize       单图时，图片长边的长度  （默认 180 ）\r\n\t * @property {String | Number} multipleSize     多图时，图片边长 （默认 70 ）\r\n\t * @property {String | Number} space            多图时，图片水平和垂直之间的间隔 （默认 6 ）\r\n\t * @property {String}          singleMode       单图时，图片缩放裁剪的模式 （默认 'scaleToFill' ）\r\n\t * @property {String}          multipleMode     多图时，图片缩放裁剪的模式 （默认 'aspectFill' ）\r\n\t * @property {String | Number} maxCount         取消按钮的提示文字 （默认 9 ）\r\n\t * @property {Boolean}         previewFullImage 是否可以预览图片 （默认 true ）\r\n\t * @property {String | Number} rowCount         每行展示图片数量，如设置，singleSize和multipleSize将会无效\t（默认 3 ）\r\n\t * @property {Boolean}         showMore         超出maxCount时是否显示查看更多的提示 （默认 true ）\r\n\t *\r\n\t * @event    {Function}        albumWidth       某些特殊的情况下，需要让文字与相册的宽度相等，这里事件的形式对外发送  （回调参数 width ）\r\n\t * @example <uv-album :urls=\"urls2\" @albumWidth=\"width => albumWidth = width\" multipleSize=\"68\" ></uv-album>\r\n\t */\r\n\texport default {\r\n\t\tname: 'uv-album',\r\n\t\tmixins: [mpMixin, mixin],\r\n\t\temits: ['albumWidth'],\r\n\t\tprops: {\r\n\t\t\t// 图片地址，Array<String>|Array<Object>形式\r\n\t\t\turls: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: () => []\r\n\t\t\t},\r\n\t\t\t// 指定从数组的对象元素中读取哪个属性作为图片地址\r\n\t\t\tkeyName: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t// 单图时，图片长边的长度\r\n\t\t\tsingleSize: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: 180\r\n\t\t\t},\r\n\t\t\t// 多图时，图片边长\r\n\t\t\tmultipleSize: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: 70\r\n\t\t\t},\r\n\t\t\t// 多图时，图片水平和垂直之间的间隔\r\n\t\t\tspace: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: 6\r\n\t\t\t},\r\n\t\t\t// 单图时，图片缩放裁剪的模式\r\n\t\t\tsingleMode: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'scaleToFill'\r\n\t\t\t},\r\n\t\t\t// 多图时，图片缩放裁剪的模式\r\n\t\t\tmultipleMode: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'aspectFill'\r\n\t\t\t},\r\n\t\t\t// 最多展示的图片数量，超出时最后一个位置将会显示剩余图片数量\r\n\t\t\tmaxCount: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: 9\r\n\t\t\t},\r\n\t\t\t// 是否可以预览图片\r\n\t\t\tpreviewFullImage: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\t// 每行展示图片数量，如设置，singleSize和multipleSize将会无效\r\n\t\t\trowCount: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: 3\r\n\t\t\t},\r\n\t\t\t// 超出maxCount时是否显示查看更多的提示\r\n\t\t\tshowMore: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\t...uni.$uv?.props?.album\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t// 单图的宽度\r\n\t\t\t\tsingleWidth: 0,\r\n\t\t\t\t// 单图的高度\r\n\t\t\t\tsingleHeight: 0,\r\n\t\t\t\t// 单图时，如果无法获取图片的尺寸信息，让图片宽度默认为容器的一定百分比\r\n\t\t\t\tsinglePercent: 0.6\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\turls: {\r\n\t\t\t\timmediate: true,\r\n\t\t\t\thandler(newVal) {\r\n\t\t\t\t\tif (newVal.length === 1) {\r\n\t\t\t\t\t\tthis.getImageRect()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\timageStyle() {\r\n\t\t\t\treturn (index1, index2) => {\r\n\t\t\t\t\tconst { space, rowCount, multipleSize, urls } = this;\r\n\t\t\t\t\tconst rowLen = this.showUrls.length;\r\n\t\t\t\t\tconst allLen = this.urls.length;\r\n\t\t\t\t\tconst style = {\r\n\t\t\t\t\t\tmarginRight: this.$uv.addUnit(space),\r\n\t\t\t\t\t\tmarginBottom: this.$uv.addUnit(space)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 如果为最后一行，则每个图片都无需下边框\r\n\t\t\t\t\tif (index1 === rowLen) style.marginBottom = 0\r\n\t\t\t\t\t// 每行的最右边一张和总长度的最后一张无需右边框\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tindex2 === rowCount ||\r\n\t\t\t\t\t\t(index1 === rowLen &&\r\n\t\t\t\t\t\t\tindex2 === this.showUrls[index1 - 1].length)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\tstyle.marginRight = 0\r\n\t\t\t\t\treturn style\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 将数组划分为二维数组\r\n\t\t\tshowUrls() {\r\n\t\t\t\tconst arr = []\r\n\t\t\t\tthis.urls.map((item, index) => {\r\n\t\t\t\t\t// 限制最大展示数量\r\n\t\t\t\t\tif (index + 1 <= this.maxCount) {\r\n\t\t\t\t\t\t// 计算该元素为第几个素组内\r\n\t\t\t\t\t\tconst itemIndex = Math.floor(index / this.rowCount)\r\n\t\t\t\t\t\t// 判断对应的索引是否存在\r\n\t\t\t\t\t\tif (!arr[itemIndex]) {\r\n\t\t\t\t\t\t\tarr[itemIndex] = []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tarr[itemIndex].push(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn arr\r\n\t\t\t},\r\n\t\t\timageWidth() {\r\n\t\t\t\treturn this.$uv.addUnit(\r\n\t\t\t\t\tthis.urls.length === 1 ? this.singleWidth : this.multipleSize\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\timageHeight() {\r\n\t\t\t\treturn this.$uv.addUnit(\r\n\t\t\t\t\tthis.urls.length === 1 ? this.singleHeight : this.multipleSize\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\t// 此变量无实际用途，仅仅是为了利用computed特性，让其在urls长度等变化时，重新计算图片的宽度\r\n\t\t\t// 因为用户在某些特殊的情况下，需要让文字与相册的宽度相等，所以这里事件的形式对外发送\r\n\t\t\talbumWidth() {\r\n\t\t\t\tlet width = 0\r\n\t\t\t\tif (this.urls.length === 1) {\r\n\t\t\t\t\twidth = this.singleWidth\r\n\t\t\t\t} else {\r\n\t\t\t\t\twidth =\r\n\t\t\t\t\t\tthis.showUrls[0].length * this.$uv.getPx(this.multipleSize) +\r\n\t\t\t\t\t\tthis.$uv.getPx(this.space) * (this.showUrls[0].length - 1)\r\n\t\t\t\t}\r\n\t\t\t\tthis.$emit('albumWidth', width)\r\n\t\t\t\treturn width\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 预览图片\r\n\t\t\tonPreviewTap(url) {\r\n\t\t\t\tconst urls = this.urls.map((item) => {\r\n\t\t\t\t\treturn this.getSrc(item)\r\n\t\t\t\t})\r\n\t\t\t\tuni.previewImage({\r\n\t\t\t\t\tcurrent: url,\r\n\t\t\t\t\turls\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 获取图片的路径\r\n\t\t\tgetSrc(item) {\r\n\t\t\t\treturn this.$uv.test.object(item) ?\r\n\t\t\t\t\t(this.keyName && item[this.keyName]) || item.src :\r\n\t\t\t\t\titem\r\n\t\t\t},\r\n\t\t\t// 单图时，获取图片的尺寸\r\n\t\t\t// 在小程序中，需要将网络图片的的域名添加到小程序的download域名才可能获取尺寸\r\n\t\t\t// 在没有添加的情况下，让单图宽度默认为盒子的一定宽度(singlePercent)\r\n\t\t\tgetImageRect() {\r\n\t\t\t\tconst src = this.getSrc(this.urls[0])\r\n\t\t\t\tuni.getImageInfo({\r\n\t\t\t\t\tsrc,\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\t// 判断图片横向还是竖向展示方式\r\n\t\t\t\t\t\tconst isHorizotal = res.width >= res.height\r\n\t\t\t\t\t\tthis.singleWidth = isHorizotal ?\r\n\t\t\t\t\t\t\tthis.singleSize :\r\n\t\t\t\t\t\t\t(res.width / res.height) * this.$uv.getPx(this.singleSize)\r\n\t\t\t\t\t\tthis.singleHeight = !isHorizotal ?\r\n\t\t\t\t\t\t\tthis.singleSize :\r\n\t\t\t\t\t\t\t(res.height / res.width) * this.singleWidth\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: () => {\r\n\t\t\t\t\t\tthis.getComponentWidth()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 获取组件的宽度\r\n\t\t\tasync getComponentWidth() {\r\n\t\t\t\t// 延时一定时间，以获取dom尺寸\r\n\t\t\t\tawait this.$uv.sleep(30)\r\n\t\t\t\t// #ifndef APP-NVUE\r\n\t\t\t\tthis.$uv.getRect('.uv-album__row').then((size) => {\r\n\t\t\t\t\tthis.singleWidth = size.width * this.singlePercent\r\n\t\t\t\t})\r\n\t\t\t\t// #endif\r\n\r\n\t\t\t\t// #ifdef APP-NVUE\r\n\t\t\t\t// 这里ref=\"uv-album__row\"所在的标签为通过for循环出来，导致this.$refs['uv-album__row']是一个数组\r\n\t\t\t\tconst ref = this.$refs['uv-album__row'][0]\r\n\t\t\t\tref &&\r\n\t\t\t\t\tdom.getComponentRect(ref, (res) => {\r\n\t\t\t\t\t\tthis.singleWidth = res.size.width * this.singlePercent\r\n\t\t\t\t\t})\r\n\t\t\t\t// #endif\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t@import '../../libs/css/components.scss';\r\n\t.uv-album {\r\n\t\t@include flex(column);\r\n\t\t&__row {\r\n\t\t\t@include flex(row);\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\t&__wrapper {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\t&__text {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 0;\r\n\t\t\t\t\tleft: 0;\r\n\t\t\t\t\tright: 0;\r\n\t\t\t\t\tbottom: 0;\r\n\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\t\t\t\t\t@include flex(row);\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>","import Component from '/Users/guoxiaoming/code/papa-code/pm-yn/uniapp-social-sports-new/node_modules/@climblee/uv-ui/components/uv-album/uv-album.vue'\nwx.createComponent(Component)"],"names":["mpMixin","mixin","uni"],"mappings":"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","x_google_ignoreList":[0]}