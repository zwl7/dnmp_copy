{"version":3,"file":"http.js","sources":["../../../../src/utils/http.ts"],"sourcesContent":["import { CustomRequestOptions } from '@/interceptors/request'\nimport { useUserStore } from '@/store/index'\nlet isRefreshing = true\nlet subscribers = []\nlet loginCount = 0\n\nfunction onAccessTokenFetched() {\n  subscribers.forEach((callback) => {\n    callback()\n  })\n  subscribers = []\n}\n\nfunction addSubscriber(callback) {\n  subscribers.push(callback)\n}\nfunction refreshToken() {\n  const userStore = useUserStore()\n  if (isRefreshing) {\n    userStore.getTokenNoLogin().then(() => {\n      onAccessTokenFetched()\n      isRefreshing = true\n    })\n  }\n  isRefreshing = false\n}\n\nexport const http = <T>(options: CustomRequestOptions, callback: any = null) => {\n  const userStore = useUserStore()\n  return new Promise<IResData<T>>(async (resolve, reject) => {\n    if (!userStore.token) {\n      addSubscriber(() => {\n        http(options, resolve)\n      })\n      refreshToken()\n      return\n    }\n    uni.request({\n      ...options,\n      dataType: 'json',\n      // #ifndef MP-WEIXIN\n      responseType: 'json',\n      // #endif\n      success(res: any) {\n        if ((callback && res.data.code === 200) || (callback && loginCount > 10)) {\n          return callback(res.data)\n        }\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          if (res.data.code === 40114 || res.data.code === 40101) {\n            loginCount += 1\n            addSubscriber(() => {\n              http(options, resolve)\n            })\n            userStore.removeToken()\n            refreshToken()\n            return\n          }\n          resolve(res.data as IResData<T>)\n        } else {\n          !options.hideErrorToast &&\n            uni.showToast({\n              icon: 'none',\n              title: (res.data as IResData<T>).msg || '请求错误',\n            })\n          reject(res)\n        }\n      },\n      fail(err) {\n        uni.showToast({\n          icon: 'none',\n          title: '网络错误，换个网络试试',\n        })\n        reject(err)\n      },\n    })\n  })\n}\n\n// 登陆请求http\nexport const loginHttp = <T>(options: CustomRequestOptions, callback: any = null) => {\n  return new Promise<IResData<T>>((resolve, reject) => {\n    uni.request({\n      ...options,\n      dataType: 'json',\n      // #ifndef MP-WEIXIN\n      responseType: 'json',\n      // #endif\n      success(res: any) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          resolve(res.data as IResData<T>)\n        } else {\n          !options.hideErrorToast &&\n            uni.showToast({\n              icon: 'none',\n              title: (res.data as IResData<T>).msg || '请求错误',\n            })\n          reject(res)\n        }\n      },\n      fail(err) {\n        uni.showToast({\n          icon: 'none',\n          title: '网络错误，换个网络试试',\n        })\n        reject(err)\n      },\n    })\n  })\n}\n\nexport const httpGet = <T>(url: string, query?: Record<string, any>) => {\n  return http<T>({\n    url,\n    query,\n    method: 'GET',\n  })\n}\n\nexport const httpPost = <T>(\n  url: string,\n  data?: Record<string, any>,\n  query?: Record<string, any>,\n) => {\n  return http<T>({\n    url,\n    query,\n    data,\n    method: 'POST',\n  })\n}\n\nexport const request = ({ url, data, method: any = 'POST' }) => {\n  return http<any>({\n    url,\n    data,\n    method: 'POST',\n  })\n}\n// 登陆请求\nexport const loginRequest = ({ url, data, method: any = 'POST' }) => {\n  return loginHttp<any>({\n    url,\n    data,\n    method: 'POST',\n  })\n}\n\nhttp.get = httpGet\nhttp.post = httpPost\n"],"names":["useUserStore","uni"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAI,eAAe;AACnB,IAAI,cAAc,CAAC;AACnB,IAAI,aAAa;AAEjB,SAAS,uBAAuB;AAClB,cAAA,QAAQ,CAAC,aAAa;AACvB,aAAA;AAAA,EAAA,CACV;AACD,gBAAc,CAAC;AACjB;AAEA,SAAS,cAAc,UAAU;AAC/B,cAAY,KAAK,QAAQ;AAC3B;AACA,SAAS,eAAe;AACtB,QAAM,YAAYA,iBAAAA,aAAa;AAC/B,MAAI,cAAc;AACN,cAAA,kBAAkB,KAAK,MAAM;AAChB,2BAAA;AACN,qBAAA;AAAA,IAAA,CAChB;AAAA,EAAA;AAEY,iBAAA;AACjB;AAEO,MAAM,OAAO,CAAI,SAA+B,WAAgB,SAAS;AAC9E,QAAM,YAAYA,iBAAAA,aAAa;AAC/B,SAAO,IAAI,QAAqB,CAAO,SAAS,WAAW;AACrD,QAAA,CAAC,UAAU,OAAO;AACpB,oBAAc,MAAM;AAClB,aAAK,SAAS,OAAO;AAAA,MAAA,CACtB;AACY,mBAAA;AACb;AAAA,IAAA;AAEFC,kBAAAA,MAAI,QAAQ,iCACP,UADO;AAAA,MAEV,UAAU;AAAA,MAIV,QAAQ,KAAU;AAChB,YAAK,YAAY,IAAI,KAAK,SAAS,OAAS,YAAY,aAAa,IAAK;AACjE,iBAAA,SAAS,IAAI,IAAI;AAAA,QAAA;AAE1B,YAAI,IAAI,cAAc,OAAO,IAAI,aAAa,KAAK;AACjD,cAAI,IAAI,KAAK,SAAS,SAAS,IAAI,KAAK,SAAS,OAAO;AACxC,0BAAA;AACd,0BAAc,MAAM;AAClB,mBAAK,SAAS,OAAO;AAAA,YAAA,CACtB;AACD,sBAAU,YAAY;AACT,yBAAA;AACb;AAAA,UAAA;AAEF,kBAAQ,IAAI,IAAmB;AAAA,QAAA,OAC1B;AACJ,WAAA,QAAQ,kBACPA,cAAA,MAAI,UAAU;AAAA,YACZ,MAAM;AAAA,YACN,OAAQ,IAAI,KAAqB,OAAO;AAAA,UAAA,CACzC;AACH,iBAAO,GAAG;AAAA,QAAA;AAAA,MAEd;AAAA,MACA,KAAK,KAAK;AACRA,sBAAAA,MAAI,UAAU;AAAA,UACZ,MAAM;AAAA,UACN,OAAO;AAAA,QAAA,CACR;AACD,eAAO,GAAG;AAAA,MAAA;AAAA,IACZ,EACD;AAAA,EAAA,EACF;AACH;AAGO,MAAM,YAAY,CAAI,SAA+B,WAAgB,SAAS;AACnF,SAAO,IAAI,QAAqB,CAAC,SAAS,WAAW;AACnDA,kBAAAA,MAAI,QAAQ,iCACP,UADO;AAAA,MAEV,UAAU;AAAA,MAIV,QAAQ,KAAU;AAChB,YAAI,IAAI,cAAc,OAAO,IAAI,aAAa,KAAK;AACjD,kBAAQ,IAAI,IAAmB;AAAA,QAAA,OAC1B;AACJ,WAAA,QAAQ,kBACPA,cAAA,MAAI,UAAU;AAAA,YACZ,MAAM;AAAA,YACN,OAAQ,IAAI,KAAqB,OAAO;AAAA,UAAA,CACzC;AACH,iBAAO,GAAG;AAAA,QAAA;AAAA,MAEd;AAAA,MACA,KAAK,KAAK;AACRA,sBAAAA,MAAI,UAAU;AAAA,UACZ,MAAM;AAAA,UACN,OAAO;AAAA,QAAA,CACR;AACD,eAAO,GAAG;AAAA,MAAA;AAAA,IACZ,EACD;AAAA,EAAA,CACF;AACH;AAEa,MAAA,UAAU,CAAI,KAAa,UAAgC;AACtE,SAAO,KAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EAAA,CACT;AACH;AAEO,MAAM,WAAW,CACtB,KACA,MACA,UACG;AACH,SAAO,KAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EAAA,CACT;AACH;AAEa,MAAA,UAAU,CAAC,EAAE,KAAK,MAAM,QAAQ,MAAM,aAAa;AAC9D,SAAO,KAAU;AAAA,IACf;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,EAAA,CACT;AACH;AAUA,KAAK,MAAM;AACX,KAAK,OAAO;;;"}