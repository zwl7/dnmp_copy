{"version":3,"file":"index.js","sources":["../../../../../src/store/user/index.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport {\n  getToken,\n  removeToken,\n  setToken,\n  setIsLogin,\n  getIsLogin,\n  removeIsLogin,\n} from '@/utils/token'\nimport { getH5MemberInfo, getWxMemberInfo, getTokenNoLogin } from '@/api/user/index'\nimport uniStorage from '@/utils/storages/uniStorage'\nimport { isMp } from '@/utils/platform'\nimport { UserLoginClass } from './login'\nexport const useUserStore = defineStore('app-user', {\n  state() {\n    return {\n      userInfo: {},\n      isLogin: getIsLogin(), // 是否登陆\n      token: getToken(),\n      // domain: location.host,\n    }\n  },\n  getters: {\n    userId: (state) => state.userInfo?.userId,\n    avatar: (state) => state.userInfo?.avatar,\n    nick_name: (state) => state.userInfo?.nick_name,\n    isAuthInstructor: (state) => state.userInfo.is_auth_instructor,\n    resumed: (state) => !!state.resumeInfo.id,\n  },\n  actions: {\n    removeToken() {\n      this.token = ''\n      removeToken()\n    },\n    setToken(token) {\n      this.token = token\n      setToken(token)\n    },\n    _setIsLogin(isLogin) {\n      this.isLogin = isLogin\n      setIsLogin(isLogin)\n      uni.$emit('GET_USER_INFO', {\n        isLogin: isLogin,\n      })\n    },\n    // 获取用户详情\n    async getUserInfo(params = {}) {\n      let res = {}\n      try {\n        if (isMp) {\n          res = await getWxMemberInfo(params)\n          console.log('获取用户信---息', res)\n        } else {\n          res = await getH5MemberInfo(params)\n        }\n        if (res.code !== 200) {\n          throw new Error(res.message)\n        }\n      } catch (error) {\n        console.log('获取用户信息失败', error)\n        throw new Error(error)\n      }\n      if (!res?.data) {\n        throw new Error('获取用户信息失败, 没有获取到数据')\n      }\n      const data = res.data\n      let instructor_info = {}\n      if (Object.prototype.toString.call(data.instructor_info) == '[object Object]') {\n        instructor_info = data.instructor_info\n      }\n      let baseInstructor = instructor_info.rs ? instructor_info.rs : {}\n      this.userInfo = {\n        ...instructor_info,\n        ...data,\n        instructor_info,\n        instructor_id: data.instructor_id,\n        userId: data.id,\n        avatar: data.avatar,\n        avatar_url: data.avatar_url,\n        nick_name: baseInstructor.name ? baseInstructor.name : '微信用户',\n        tag_ids_arr: baseInstructor.tag_ids_arr ? baseInstructor.tag_ids_arr : [],\n        level: baseInstructor.level,\n        star_level: baseInstructor.star_level ? baseInstructor.star_level : '',\n        level_str: baseInstructor.level_str ? baseInstructor.level_str : '',\n        is_auth_instructor: data.instructor_id > 0 ? 1 : 0,\n      }\n      return this.userInfo\n    },\n    // 获取临时token\n    async getTokenNoLogin() {\n      const userLoginClass = new UserLoginClass()\n      const res = await userLoginClass.getTemporaryToken()\n      this.setToken(res.token)\n      this._setIsLogin(res.is_login)\n      return res.data\n    },\n\n    logout({ silenced = false, redirect = null } = {}) {\n      this.removeToken()\n      this.userInfo = {}\n      this.resumeInfo = {}\n      this._setIsLogin(false)\n      if (!silenced) {\n        uni.reLaunch({\n          url: '/pages/tabbar/home/index',\n        })\n      }\n    },\n  },\n})\n"],"names":["defineStore","getIsLogin","getToken","removeToken","setToken","setIsLogin","uni","isMp","getWxMemberInfo","getH5MemberInfo","UserLoginClass"],"mappings":"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"}